import{a as pt,d as Ui,e as ft,f as ht,g as qi}from"./chunk-OSYYZ77X.js";import{a as $i}from"./chunk-P6SGNCBL.js";import{a as Ci,b as Pi,c as Oi,d as Ni,g as Ee,i as Di,j as Ei,k as ct,m as Hi,n as zi,o as mt,p as Wi,q as ut,r as Gi,s as ji,u as Vi}from"./chunk-CI4E27YA.js";import{a as Re,b as Bi,c as Ji,d as Ai,f as ot,g as lt,h as Ke,i as Li,j as Qe}from"./chunk-J6VUMROV.js";import"./chunk-DDHMQRMR.js";import{a as gi,b as $e,d as Ti,e as be}from"./chunk-NEUWTXRF.js";import{b as Oe,d as xi,e as nt,f as Ie,g as Ne,h as De,i as Ye,j as wi,k as Ii,l as bi,m as at}from"./chunk-5MTIGNOB.js";import{F as xe,G as yi,H as we,R as _i,a as st,b as Pe,c as ii,d as ri,e as si,f as ni,g as ai,h as oi,i as li,j as ci,k as mi,l as ui,m as ae,n as oe}from"./chunk-COPGUTEU.js";import{A as Si,B as vi,H as Fi,b as X,r as Ue,s as pi,t as fi,u as hi,v as di,w as qe,z as Ri}from"./chunk-GSOOUCJN.js";import{b as ei,d as ti}from"./chunk-YUIUJIOR.js";import{a as Yt}from"./chunk-OH74MGAF.js";import{b as Qt}from"./chunk-A32YL34U.js";import"./chunk-53GUVE7Z.js";import{a as Zt}from"./chunk-UTTIMDT4.js";import{a as Xt}from"./chunk-LAZNO6VW.js";import"./chunk-QS6RCA6Y.js";import{a as Ce}from"./chunk-WDTJILD4.js";import{a as Kt}from"./chunk-6NTMQUAJ.js";import{a as zt}from"./chunk-APGKXN3F.js";import{c as Ht}from"./chunk-PHCUTV4M.js";import"./chunk-7C77LBCZ.js";import"./chunk-LK52GLIE.js";import{a as Wt}from"./chunk-GHKFJTCN.js";import{a as ki}from"./chunk-IZF35GKA.js";import{e as Xe,f as Mi}from"./chunk-KS53OQGV.js";import{a as At}from"./chunk-EB5RRWIA.js";import{a as Yi}from"./chunk-RWIKH4KN.js";import"./chunk-TH7OTU7Q.js";import"./chunk-MP46524Y.js";import"./chunk-N3BNSVOS.js";import"./chunk-XCJPZZY7.js";import"./chunk-Y2F4CIGY.js";import{a as Ut}from"./chunk-J3VF5LTP.js";import"./chunk-4FSVG2A5.js";import"./chunk-BPPBSQ5N.js";import"./chunk-2B3PG2ZT.js";import"./chunk-SYTNPSW4.js";import"./chunk-2AAD7VYB.js";import"./chunk-7TBWQ2OA.js";import{a as ge}from"./chunk-DVSFGYL7.js";import"./chunk-3JO3IXGW.js";import"./chunk-DACZ4LLK.js";import"./chunk-2EOPE46E.js";import"./chunk-2UGJ72JG.js";import"./chunk-LWI2RQ66.js";import"./chunk-LOEAA5XF.js";import"./chunk-MAPO7YGF.js";import{n as $t}from"./chunk-OLIJD5I4.js";import"./chunk-OOE2LCNP.js";import"./chunk-I3S324BU.js";import"./chunk-ESBNO4XM.js";import"./chunk-3A7OIH4J.js";import"./chunk-RMS5474O.js";import"./chunk-2SHNUN5D.js";import{a as qt}from"./chunk-IFCRPPYQ.js";import"./chunk-YW3L7OMP.js";import"./chunk-FDQ4JKC5.js";import"./chunk-NAV5L5PJ.js";import{a as Gt,b as ie}from"./chunk-V34KIKJR.js";import"./chunk-V2JYXY4D.js";import"./chunk-EK4W5QYS.js";import{g as Ve}from"./chunk-SPJDFBYB.js";import{c as pe}from"./chunk-WMT47BMV.js";import"./chunk-PJQZD5QI.js";import{a as Vt}from"./chunk-IEUNGS56.js";import"./chunk-6KRFVLII.js";import"./chunk-IEAJIOPI.js";import"./chunk-SPAOTNUK.js";import"./chunk-RQQJT345.js";import"./chunk-27SQOLVY.js";import"./chunk-6QNRNEQJ.js";import"./chunk-UYBHUOFR.js";import"./chunk-BYQI7UDX.js";import"./chunk-A6I6D7FN.js";import"./chunk-P5GBR7PO.js";import"./chunk-7WFRJSY3.js";import"./chunk-PSQRUING.js";import"./chunk-3JLZ7SFH.js";import"./chunk-FUBITVJ7.js";import"./chunk-VOH7XGOR.js";import"./chunk-Y6HWUWZ3.js";import"./chunk-AQ74ANSJ.js";import"./chunk-5UCI4TUX.js";import"./chunk-SAOUSUZE.js";import"./chunk-PPFMRTTD.js";import"./chunk-IWJQ3PU6.js";import"./chunk-Z5Q76SB7.js";import{a as jt}from"./chunk-TTN7UOJS.js";import"./chunk-5QLB7ZJ7.js";import"./chunk-E5R4OI7X.js";import"./chunk-N566L3JG.js";import"./chunk-7S6PD5JC.js";import"./chunk-ZWI7LLTZ.js";import"./chunk-6NCXSKJD.js";import"./chunk-ATXTHXJA.js";import"./chunk-VFINLX57.js";import"./chunk-LM5MGO7W.js";import{o as Lt}from"./chunk-4HUAEW4D.js";import"./chunk-XWRPBDYS.js";import"./chunk-TCCAOREC.js";import"./chunk-BCREO4Q5.js";import{a as Jt,l as H,v as L}from"./chunk-SO6OJFOM.js";import{b as A}from"./chunk-DG5QI6E2.js";import"./chunk-TMZNSBQB.js";import"./chunk-ZGLJFDS6.js";import"./chunk-RSDQHAJX.js";import{Y as rt,s as Et,w as Bt}from"./chunk-OFVMJORF.js";import{a as Dt}from"./chunk-2FYXACXP.js";import"./chunk-XGVKSCMM.js";import"./chunk-FX2VBPAM.js";import"./chunk-K4GPNFIS.js";import"./chunk-RP7XSKHE.js";import"./chunk-VV7MGXTC.js";import"./chunk-IXNVQC76.js";import{a as Nt}from"./chunk-LYPZUCFI.js";import"./chunk-QYC4ILGT.js";import{b as Ot}from"./chunk-HFQFGALU.js";import"./chunk-5TSEU5EE.js";import"./chunk-VC35VCVT.js";import"./chunk-MT7BXRRQ.js";import"./chunk-NNKLK2DS.js";import"./chunk-VU5W7W6Y.js";import{aa as je,h as Pt}from"./chunk-BRGZVJPZ.js";import{I as R,T as Ct,b as St}from"./chunk-Z5NXR7SL.js";import{H as kt,S as W,y as ye}from"./chunk-7JLWSSXP.js";import{a as b}from"./chunk-W3WDPWBE.js";import{g as Tt,k as _t,m as Ft,r as Ge,y as Mt}from"./chunk-JKP4I6UL.js";import{a as vt}from"./chunk-TZHKPIVH.js";import"./chunk-JPDAKIWT.js";import"./chunk-W6LY37E4.js";import{q as te,s as C}from"./chunk-BRWS572J.js";import{a as Rt,m as ke}from"./chunk-AKNRR36C.js";import{a as E,b as B,g as v}from"./chunk-JEGVIFEP.js";var Xi=8,or=256,lr=0,U=class extends Nt(Ct){constructor(){super(...arguments),this._tileFetchQueue=new Ut({concurrency:32,process:(t,e)=>this._fetchRawTile(t.pyramidLevel,t.row,t.col,B(E({},t.options),{signal:e}))}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}init(){return v(this,null,function*(){let t=Oe();this.addResolvingPromise(t),yield this.when()})}normalizeCtorArgs(t){return t?.ioConfig&&(t=B(E({},t),{ioConfig:E({resolution:null,bandIds:null,sampling:"closest",tileInfo:ie.create()},t.ioConfig)})),t}get _isGlobalWrappableSource(){let{rasterInfo:t}=this,e=De(t.spatialReference);return e!=null&&t.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){let{transform:t}=this.rasterInfo;return t==null||t.type==="gcs-shift"}set rasterJobHandler(t){this._set("rasterJobHandler",t),this.datasetFormat==="Function"&&this.primaryRasters?.rasters?.forEach(e=>e.rasterJobHandler=t)}get rasterId(){return this.url||"rasterId-"+lr++}set url(t){this._set("url",Ve(t,te.getLogger(this)))}open(t){return v(this,null,function*(){throw new C("BaseRaster:open-not-implemented","open() is not implemented")})}fetchTile(s,a,n){return v(this,arguments,function*(t,e,r,i={}){let l=i.tileInfo||this.rasterInfo.storageInfo.tileInfo,o=this.getTileExtentFromTileInfo(t,e,r,l);return i=E({noClip:!0},i),this.fetchPixels(o,l.size[0],l.size[1],i)})}identify(r){return v(this,arguments,function*(t,e={}){t=ye(H,t).clone().normalize();let{multidimensionalDefinition:i,timeExtent:s}=e,{rasterInfo:a}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:l}=a,{transposedVariableName:o}=e,c=l!=null&&n&&(s!=null||Ke(i));c&&!o&&(o=i!=null&&i.length>0?i[0].variableName??void 0:l.variables[0].name,e=B(E({},e),{transposedVariableName:o})),e=this._getRequestOptionsWithSliceId(e);let{spatialReference:m,extent:p}=a,{datumTransformation:f}=e,u=nt(t,m,f);if(!p.intersects(u))return{location:u,value:null};if(a.transform!=null){let M=a.transform.inverseTransform(u);if(!a.nativeExtent.intersects(M))return{location:M,value:null};u=M}let d=0,y=o!=null&&l!=null&&a.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){let M=this.primaryRasters.rasters[0];if(y)return M.identify(u,e);let{pixelSize:D}=a,N=3,J=D.x*N/2,V=D.y*N/2,z=new L({xmin:u.x-J,xmax:u.x+J,ymin:u.y-V,ymax:u.y+V,spatialReference:m}),Y={interpolation:"nearest",multidimensionalDefinition:i,sliceId:e.sliceId},{pixelBlock:j}=yield M.fetchPixels(z,N,N,Y),{pixelBlock:q}=yield this.fetchPixels(z,N,N,Y);if(j==null)return{location:u,value:null};let Z=Math.floor(N*N*.5),me=!j.mask||j.mask[Z]?j.pixels.map(ne=>ne[Z]):null,se;return q!=null&&(se=!q.mask||q.mask[Z]?q.pixels.map(ne=>ne[Z]):void 0),{location:u,value:me,processedValue:se,pyramidLevel:0}}if(!y){if(e.srcResolution)d=at(e.srcResolution,a,this.ioConfig.sampling).pyramidLevel;else if(d=yield this.computeBestPyramidLevelForLocation(t,e),d==null)return{location:u,value:null}}let h=this.identifyPixelLocation(u,d,null,y);if(h===null)return{location:u,value:null};let{row:g,col:x,rowOffset:w,colOffset:I,blockWidth:T}=h,S=o??e.sliceId,F=pt(this.rasterId,S),k=`${d}/${g}/${x}`,P=ft(F,null,k);P==null&&(P=this.fetchRawTile(d,g,x,e),ht(F,null,k,P));let _=yield P;if(!_?.pixels?.length)return{location:u,value:null};let O=w*T+I;return this._processIdentifyResult(_,{srcLocation:u,position:O,pyramidLevel:d,useTransposedTile:!!y,requestSomeSlices:c,identifyOptions:e})})}fetchPixels(s,a,n){return v(this,arguments,function*(t,e,r,i={}){t=bi(t),i=this._getRequestOptionsWithSliceId(i);let{_hasNoneOrGCSShiftTransform:l}=this;if(i.requestRawData&&l)return this._fetchPixels(t,e,r,i);let o=De(t.spatialReference),c=Ye(t);if(o==null||c===0||c===1&&this._isGlobalWrappableSource&&l)return this._fetchPixels(t,e,r,i);if(c>=3)return{extent:t,pixelBlock:null};let m=[],{xmin:p,xmax:f}=t,u=Math.round(o/(f-p)*e),d=u-Math.round((o/2-p)/(f-p)*e),y=0,h=[];for(let I=0;I<=c;I++){let T=new L({xmin:I===0?p:-o/2,xmax:I===c?f-o*I:o/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),S=I===0?u-d:I===c?e-y:u;y+=S,h.push(S);let F=i.disableWrapAround&&I>0?null:this._fetchPixels(T,S,r,i);m.push(F)}let g=(yield Promise.all(m)).map(I=>I?.pixelBlock),x=null,w={width:e,height:r};return this.rasterJobHandler?x=(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:w,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:h},i)).pixelBlock:x=Ue(g,w,{blockWidths:h}),{extent:t,srcExtent:Ie(t,this.rasterInfo.spatialReference,i.datumTransformation),pixelBlock:x}})}fetchRawPixels(s,a,n){return v(this,arguments,function*(t,e,r,i={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};let l=yield this._fetchRawTiles(t,e,r,i),{nativeExtent:o,nativePixelSize:c,storageInfo:m}=this.rasterInfo,p=2**t,f=c.x*p,u=c.y*p,d=new L({xmin:o.xmin+f*e.x,xmax:o.xmin+f*(e.x+r.width-1),ymin:o.ymax-u*(e.y+r.height-1),ymax:o.ymax-u*e.y,spatialReference:o.spatialReference});if(!l)return{extent:d,srcExtent:d,pixelBlock:null};let{pixelBlocks:y,mosaicSize:h}=l;if(y.length===1&&y[0]!=null&&y[0].width===r.width&&y[0].height===r.height)return{extent:d,srcExtent:d,pixelBlock:l.pixelBlocks[0]};let g=t>0?m.pyramidBlockWidth:m.blockWidth,x=t>0?m.pyramidBlockHeight:m.blockHeight,w={x:e.x%g,y:e.y%x},I;return this.rasterJobHandler?I=(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:y,srcMosaicSize:h,destDimension:r,clipOffset:w,clipSize:r,coefs:null,sampleSpacing:null,interpolation:i.interpolation,alignmentInfo:null,blockWidths:null},i)).pixelBlock:I=Ue(y,h,{clipOffset:w,clipSize:r}),{extent:d,srcExtent:d,pixelBlock:I}})}fetchRawTile(t,e,r,i){throw new C("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return Ie(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?ui(t,e):this.rasterJobHandler.decode({data:t,options:e})}request(t,e,r=0){return v(this,null,function*(){let{customFetchParameters:i}=this.ioConfig,{range:s,query:a,headers:n}=e;r=r??e.retryCount??this.ioConfig.retryCount;let l=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return yield je(t,B(E({},e),{query:E(E({},a),i),headers:E(E({},n),l)}))}catch(o){if(r>0)return r--,this.request(t,e,r);throw o}})}getSliceIndex(t){let{multidimensionalInfo:e}=this.rasterInfo;return e==null||t==null||t.length===0?null:Qe(t,e)}getTileExtentFromTileInfo(t,e,r,i){let s=i.lodAt(t);return this.getTileExtent({x:s.resolution,y:s.resolution},e,r,i.origin,i.spatialReference,i.size)}updateTileInfo(){let{storageInfo:t,spatialReference:e,extent:r,pixelSize:i}=this.rasterInfo,{pyramidResolutions:s}=t;if(!t.tileInfo){let a=[],n=t.maximumPyramidLevel||0,l=(i.x+i.y)/2,o=1/.0254*96*l;for(let m=0;m<=n&&(a.unshift(new Gt({level:n-m,resolution:l,scale:o})),m!==n);m++)if(s){let p=(s[m].x+s[m].y)/2;o*=p/l,l=p}else l*=2,o*=2;let c=new H({x:r.xmin,y:r.ymax,spatialReference:e});t.tileInfo=new ie({origin:c,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:a}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,r=512,i){let{width:s,height:a,nativeExtent:n,pixelSize:l,spatialReference:o}=t,c=new H({x:n.xmin,y:n.ymax,spatialReference:o});i==null&&(i=Math.max(0,Math.round(Math.log(Math.max(s,a))/Math.LN2-8)));let m=this.computeBlockBoundary(n,512,512,{x:n.xmin,y:n.ymax},[l],i);t.storageInfo=new ae({blockWidth:e,blockHeight:r,pyramidBlockWidth:e,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:i,blockBoundary:m})}computeBestPyramidLevelForLocation(r){return v(this,arguments,function*(t,e={}){return 0})}computeBlockBoundary(t,e,r,i,s,a=0,n=2){if(s.length===1&&a>0){s=[...s];let{x:m,y:p}=s[0];for(let f=0;f<a;f++)m*=n,p*=n,s.push({x:m,y:p})}let l=[],{x:o,y:c}=i;for(let m=0;m<s.length;m++){let{x:p,y:f}=s[m];l.push({minCol:Math.floor((t.xmin-o+.1*p)/e/p),maxCol:Math.floor((t.xmax-o-.1*p)/e/p),minRow:Math.floor((c-t.ymax+.1*f)/r/f),maxRow:Math.floor((c-t.ymin-.1*f)/r/f)})}return l}getPyramidPixelSize(t){let{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:i}=this.rasterInfo.storageInfo;if(t===0)return e;if(r!=null&&r.length)return r[t-1];let s=i**t;return{x:e.x*s,y:e.y*s}}identifyPixelLocation(t,e,r,i){let{spatialReference:s,nativeExtent:a,storageInfo:n}=this.rasterInfo,{maximumPyramidLevel:l,origin:o,transposeInfo:c}=n,m=i&&c!=null?c.tileSize[0]:n.blockWidth,p=i&&c!=null?c.tileSize[1]:n.blockHeight,f=nt(t,s,r);if(!a.intersects(f)||e<0||e>l)return null;let u=this.getPyramidPixelSize(e),{x:d,y}=u,h=(o.y-f.y)/y/p,g=(f.x-o.x)/d/m,x=Math.min(p-1,Math.floor((h-Math.floor(h))*p)),w=Math.min(m-1,Math.floor((g-Math.floor(g))*m));return{pyramidLevel:e,row:Math.floor(h),col:Math.floor(g),rowOffset:x,colOffset:w,blockWidth:m,srcLocation:f}}getTileExtent(t,e,r,i,s,a){let[n,l]=a,o=i.x+r*n*t.x,c=o+n*t.x,m=i.y-e*l*t.y,p=m-l*t.y;return new L({xmin:o,xmax:c,ymin:p,ymax:m,spatialReference:s})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,r){let i=this.rasterInfo.storageInfo.blockBoundary[t];return!i||i.maxRow<e||i.maxCol<r||i.minRow>e||i.minCol>r}updateImageSpaceRasterInfo(t){let{extent:e,pixelSize:r}=t;if(e.xmin===-.5&&e.ymax===.5&&r.x===1&&r.y===1&&t.transform==null)return;let{width:i,height:s}=t,a=A.WebMercator;t.spatialReference=a,t.extent=t.nativeExtent=new L({xmin:-.5,ymax:.5,xmax:i-.5,ymin:.5-s,spatialReference:a}),t.isPseudoSpatialReference=!0,t.transform=null,t.pixelSize=new H({x:1,y:1,spatialReference:a});let{extent:n,storageInfo:l}=t;if(l){l.origin=new H({x:n.xmin,y:n.ymax,spatialReference:a});let{pyramidResolutions:o,tileInfo:c}=l;if(o&&o.forEach(m=>{m.x/=r.x,m.y/=r.y}),c){c.origin=l.origin;let m=(t.nativePixelSize.x+t.nativePixelSize.y)/2;c.lods.forEach((p,f)=>{p.resolution=m*2**f,p.scale=96*p.resolution/.0254})}}}_fetchPixels(s,a,n){return v(this,arguments,function*(t,e,r,i={}){let l=Ye(t);if(l>=2)return{extent:t,pixelBlock:null};let o=this._getSourceDataInfo(t,e,r,i),{pyramidLevel:c,srcResolution:m,srcExtent:p,srcWidth:f,srcHeight:u,ul:d}=o;if(f===0||u===0)return{extent:t,srcExtent:p,pixelBlock:null};let{rasterInfo:y}=this,h=y.transform,g=h?.type==="gcs-shift",x=De(t.spatialReference)!=null;!g&&x||(l=Ye(o.srcExtent,g));let w=yield this._fetchRawTiles(c,d,{width:f,height:u,wrapCount:l},i);if(!w)return{extent:t,srcExtent:p,pixelBlock:null};let I=y.storageInfo,T=c>0?I.pyramidBlockWidth:I.blockWidth,S=c>0?I.pyramidBlockHeight:I.blockHeight,{x:F,y:k}=y.pixelSize;if(c>0){let{pyramidResolutions:ue,pyramidScalingFactor:ar}=I;if(ue!=null&&ue[c-1])({x:F,y:k}=ue[c-1]);else{let bt=ar**c;F*=bt,k*=bt}}let P=y.spatialReference,_=new H({x:F,y:k,spatialReference:P}),O=T===f&&S===u&&d.x%T==0&&d.y%S==0,M=new H({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/r,spatialReference:t.spatialReference}),D=!t.spatialReference.equals(P),N=P.isGeographic?1e-9:1e-4,{datumTransformation:J}=i;if(!D&&O&&w.pixelBlocks.length===1&&T===e&&S===r&&cr(m,M,N))return{extent:t,srcExtent:p,srcTilePixelSize:_,pixelBlock:w.pixelBlocks[0]};let V=x&&De(p.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,z=i.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");z&&!this.rasterJobHandler&&(yield Oe());let Y=this.rasterJobHandler?yield this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:w.extent,pixelSize:M.toJSON(),datumTransformation:J,rasterTransform:h,hasWrapAround:l>0||V,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:z},i):Ii({projectedExtent:t,srcBufferExtent:w.extent,pixelSize:M,datumTransformation:J,rasterTransform:h,hasWrapAround:l>0||V,isAdaptive:!1,includeGCSGrid:z}),j,q=!i.requestRawData,Z={rows:Y.spacing[0],cols:Y.spacing[1]},me=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(c,w.extent.xmin):void 0,{pixelBlocks:se,mosaicSize:ne,isPartiallyFilled:nr}=w,We=null;if(this.rasterJobHandler)({pixelBlock:j,localNorthDirections:We}=yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:se,srcMosaicSize:ne,destDimension:q?{width:e,height:r}:null,coefs:q?Y.coefficients:null,sampleSpacing:q?Z:null,projectDirections:z,gcsGrid:z?Y.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:i.interpolation,alignmentInfo:me,blockWidths:null},i));else{let ue=Ue(se,ne,{alignmentInfo:me});j=q?qe(ue,{width:e,height:r},Y.coefficients,Z,i.interpolation):ue,z&&Y.gcsGrid&&(We=di({width:e,height:r},Y.gcsGrid),j=Si(j,this.rasterInfo.dataType,We))}return i.requestRawData||z?{extent:t,srcExtent:p,srcTilePixelSize:_,pixelBlock:j,transformGrid:Y,localNorthDirections:We,isPartiallyFilled:nr}:{extent:t,srcExtent:p,srcTilePixelSize:_,pixelBlock:j}})}_fetchRawTiles(t,e,r,i){return v(this,null,function*(){let{origin:s,blockBoundary:a}=this.rasterInfo.storageInfo,{blockWidth:n,blockHeight:l}=this.getBlockWidthHeight(t),{x:o,y:c}=e,{width:m,height:p,wrapCount:f}=r,u=this._getRasterTileAlignmentInfo(t,0);i.buffer&&(o-=i.buffer.cols,c-=i.buffer.rows,m+=2*i.buffer.cols,p+=2*i.buffer.rows);let d=0,y=0,h=0;f&&u!=null&&({worldColumnCountFromOrigin:y,originColumnOffset:h,rightPadding:d}=u,y*u.blockWidth-d>=o+m&&(d=0));let g=Math.floor(o/n),x=Math.floor(c/l),w=Math.floor((o+m+d-1)/n),I=Math.floor((c+p+d-1)/l),T=a[t];if(!T)return null;let{minRow:S,minCol:F,maxCol:k,maxRow:P}=T;if(f===0&&(I<S||w<F||x>P||g>k))return null;let _=new Array,O=!1,M=this.ioConfig.allowPartialFill==null?i.allowPartialFill:this.ioConfig.allowPartialFill;for(let j=x;j<=I;j++)for(let q=g;q<=w;q++){let Z=q;if(!i.disableWrapAround&&f&&u!=null&&y<=q&&(Z=q-y-h),j>=S&&Z>=F&&P>=j&&k>=Z){let me=this._tileFetchQueue.push({pyramidLevel:t,row:j,col:Z,options:i},{signal:i.signal});M?_.push(new Promise(se=>{me.then(ne=>se(ne)).catch(()=>{O=!0,se(null)})})):_.push(me)}else _.push(Promise.resolve(null))}if(_.length===0)return null;let D=yield Promise.all(_),N={height:(I-x+1)*l,width:(w-g+1)*n},{spatialReference:J}=this.rasterInfo,V=this.getPyramidPixelSize(t),{x:z,y:Y}=V;return{extent:new L({xmin:s.x+g*n*z,xmax:s.x+(w+1)*n*z,ymin:s.y-(I+1)*l*Y,ymax:s.y-x*l*Y,spatialReference:J}),pixelBlocks:D,mosaicSize:N,isPartiallyFilled:O}})}_fetchRawTile(t,e,r,i){let s=this.rasterInfo.storageInfo.blockBoundary[t];if(!s)return Promise.resolve(null);let{minRow:a,minCol:n,maxCol:l,maxRow:o}=s;if(e<a||r<n||e>o||r>l)return Promise.resolve(null);let c=pt(this.rasterId,i.sliceId),m=`${t}/${e}/${r}`,p=ft(c,i.registryId,m);if(p==null){let f=new AbortController;p=this.fetchRawTile(t,e,r,B(E({},i),{signal:f.signal})),ht(c,i.registryId,m,p,f),p.catch(()=>qi(c,i.registryId,m))}return i.signal&&Ft(i,()=>{Ui(c,i.registryId,m)}),p}_computeMagDirValues(t){let{bandCount:e,dataType:r}=this.rasterInfo;if(!(e===2&&r==="vector-magdir"||r==="vector-uv")||t?.length!==2||!t[0]?.length)return null;let i=t[0].length;if(r==="vector-magdir"){let o=t[1].map(c=>(c+360)%360);return[t[0],o]}let[s,a]=t,n=[],l=[];for(let o=0;o<i;o++){let[c,m]=Ri([s[o],a[o]]);n.push(c),l.push(m)}return[n,l]}_getRasterTileAlignmentInfo(t,e){return this._rasterTileAlignmentInfo==null&&(this._rasterTileAlignmentInfo=wi(this.rasterInfo)),this._rasterTileAlignmentInfo.pyramidsInfo==null?null:E({startX:e,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform},this._rasterTileAlignmentInfo.pyramidsInfo[t])}_getSourceDataInfo(t,e,r,i={}){let s={datumTransformation:i.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};i.srcResolution&&(s.srcResolution=i.srcResolution,this._updateSourceDataInfo(t,s));let a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:n,srcHeight:l,pyramidLevel:o}=s,c=n/e,m=l/r,p=o<a&&c*m>=16,f=o===a&&this._requireTooManySrcTiles(n,l,e,r);if(p||f||n===0||l===0){let u=new H({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/r,spatialReference:t.spatialReference}),d=xi(u,this.rasterInfo.spatialReference,t,s.datumTransformation),y=!d||i.srcResolution&&d.x+d.y<i.srcResolution.x+i.srcResolution.y;if(p&&i.srcResolution&&y){let h=Math.round(Math.log(Math.max(c,m))/Math.LN2)-1;if(a-o+3>=h){let g=2**h;d={x:i.srcResolution.x*g,y:i.srcResolution.y*g}}}d&&(s.srcResolution=d,this._updateSourceDataInfo(t,s))}return this._requireTooManySrcTiles(s.srcWidth,s.srcHeight,e,r)&&(s.srcWidth=0,s.srcHeight=0),s}_requireTooManySrcTiles(t,e,r,i){let{tileInfo:s}=this.rasterInfo.storageInfo,a=Math.ceil(t/s.size[0])*Math.ceil(e/s.size[1]),n=t/r,l=e/i,o=Math.max(1,(r+i)/1024);return a>=or*o||n>Xi||l>Xi}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;let{rasterInfo:r}=this,i=r.spatialReference,{srcResolution:s,datumTransformation:a}=e,{pyramidLevel:n,pyramidResolution:l,excessiveReading:o}=at(s,r,this.ioConfig.sampling);if(o)return;let c=e.srcExtent||Ie(t,i,a);if(c==null)return;let m=r.transform;m&&(c=m.inverseTransform(c)),e.srcExtent=c;let{x:p,y:f}=r.storageInfo.origin,u=Math.floor((c.xmin-p)/l.x+.1),d=Math.floor((f-c.ymax)/l.y+.1),y=Math.floor((c.xmax-p)/l.x-.1),h=Math.floor((f-c.ymin)/l.y-.1),g=c.width<.1*l.x?0:y-u+1,x=c.height<.1*l.y?0:h-d+1;e.pyramidLevel=n,e.pyramidResolution=l,e.srcWidth=g,e.srcHeight=x,e.ul={x:u,y:d}}_getRequestOptionsWithSliceId(t){return this.rasterInfo.multidimensionalInfo!=null&&t.sliceId==null&&(t=B(E({},t),{sliceId:this.getSliceIndex(t.multidimensionalDefinition)})),t}_processIdentifyResult(t,e){let{srcLocation:r,position:i,pyramidLevel:s,useTransposedTile:a}=e,n=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[i]))return{location:r,value:null};let{multidimensionalInfo:l}=this.rasterInfo;if(l==null||!a){let h=t.pixels.map(w=>w[i]),g={location:r,value:h,pyramidLevel:s},x=this._computeMagDirValues(h.map(w=>[w]));return x?.length&&(g.magdirValue=x.map(w=>w[0])),g}let o=t.pixels.map(h=>h.slice(i*n,i*n+n)),c=this._computeMagDirValues(o),{requestSomeSlices:m,identifyOptions:p}=e,f=Bi(l,p.transposedVariableName);if(m){let h=Ji(f,p.multidimensionalDefinition,p.timeExtent);o=o.map(g=>h.map(x=>g[x])),c=c?.map(g=>h.map(x=>g[x])),f=h.map(g=>f[g])}let u=t.noDataValues||this.rasterInfo.noDataValue,d={pixels:o,pixelType:t.pixelType},y;return u!=null&&(ti(d,u),y=d.mask),{location:r,value:null,dataSeries:f.map((h,g)=>{let x={value:y?.[g]===0?null:o.map(w=>w[g]),multidimensionalDefinition:h.multidimensionalDefinition.map(w=>new Re(B(E({},w),{isSlice:!0})))};return c?.length&&(x.magdirValue=[c[0][g],c[1][g]]),x}),pyramidLevel:s}}};function cr(t,e,r){return Math.abs(t.x-e.x)<r&&Math.abs(t.y-e.y)<r}b([R()],U.prototype,"_rasterTileAlignmentInfo",void 0),b([R()],U.prototype,"_tileFetchQueue",void 0),b([R({readOnly:!0})],U.prototype,"_isGlobalWrappableSource",null),b([R({readOnly:!0})],U.prototype,"_hasNoneOrGCSShiftTransform",null),b([R()],U.prototype,"rasterJobHandler",null),b([R({readOnly:!0})],U.prototype,"rasterId",null),b([R(Xe)],U.prototype,"url",null),b([R({type:String,json:{write:!0}})],U.prototype,"datasetName",void 0),b([R({type:String,json:{write:!0}})],U.prototype,"datasetFormat",void 0),b([R()],U.prototype,"hasUniqueSourceStorageInfo",void 0),b([R()],U.prototype,"rasterInfo",void 0),b([R()],U.prototype,"ioConfig",void 0),b([R()],U.prototype,"sourceJSON",void 0),U=b([W("esri.layers.support.rasterDatasets.BaseRaster")],U);var K=U;function mr(t,e){if(t.spatialReference.equals(e))return t;let r=rt(t.spatialReference),i=rt(e);if(r===i)return t;let s=r/i;return{x:t.x*s,y:t.y*s}}function Be(t,e,r){return v(this,null,function*(){if(r.type==="extent")return pr(t,e,r);let{width:i,height:s}=t,a=new Uint8Array(i*s),{contains:n,intersects:l}=yield import("./chunk-SYETQQI7.js");return l(e,r)?r.type==="polyline"?fr(t,e,r):n(r,e)?t:ur(t,e,r):new X({pixelType:t.pixelType,width:i,height:s,mask:a,maskIsAlpha:!1,pixels:[...t.pixels]})})}function ur(t,e,r){if(!t)return t;let{width:i,height:s}=t,a=e.width/i,n=e.height/s,{xmin:l,ymax:o}=e,c;if(r.type==="extent"){let h=(r.xmin-l)/a,g=(r.xmax-l)/a,x=(o-r.ymax)/n,w=(o-r.ymin)/n;c=[[[h,x],[h,w],[g,w],[g,x],[h,x]]]}else c=r.rings.map(h=>h.map(([g,x])=>[(g-l)/a,(o-x)/n]));let m=document.createElement("canvas");m.width=i,m.height=s;let p=m.getContext("2d");p.fillStyle="#f00",p.beginPath(),c.forEach(h=>{p.moveTo(h[0][0],h[0][1]);for(let g=0;g<h.length;g++)p.lineTo(h[g][0],h[g][1]);p.closePath()}),p.fill();let f=p.getImageData(0,0,i,s).data,u=t.mask,d=i*s,y=new Uint8Array(d);for(let h=0;h<d;h++)u&&!u[h]||(y[h]=f[4*h+3]>127?255:0);return new X({pixelType:t.pixelType,width:i,height:s,mask:y,maskIsAlpha:!1,pixels:[...t.pixels]})}function pr(t,e,r){let{width:i,height:s}=t,a=new Uint8Array(i*s),n=e.width/i,l=e.height/s;if(r.width/n<.5||r.height/l<.5)return new X({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});let{xmin:o,xmax:c,ymin:m,ymax:p}=e,{xmin:f,xmax:u,ymin:d,ymax:y}=r,h=Math.max(o,f),g=Math.min(c,u),x=Math.max(m,d),w=Math.min(p,y),I=.5*n,T=.5*l;if(g-h<I||w-x<T||g<o+I||h>c-I||x>p-T||w<m+T)return new X({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});let S=Math.max(0,(h-o)/n),F=Math.min(i,Math.max(0,(g-o)/n)),k=Math.max(0,(p-w)/l),P=Math.min(s,Math.max(0,(p-x)/l)),_=Math.round(S),O=Math.round(F)-1,M=Math.round(k),D=Math.round(P)-1;if(_===O&&S%1>.5&&F%1<.5||M===D&&k%1>.5&&P%1<.5)return new X({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});if(_===0&&M===0&&O===i&&D===s)return t;let N=t.mask;for(let J=M;J<=D;J++)for(let V=_;V<=O;V++){let z=J*i+V;a[z]=N?N[z]:255}return new X({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]})}function fr(t,e,r){let{width:i,height:s}=t,a=new Uint8Array(i*s),n=e.width/i,l=e.height/s,{xmin:o,ymax:c}=e,{paths:m}=r,p=t.mask;for(let f=0;f<m.length;f++){let u=m[f];for(let d=0;d<u.length-1;d++){let[y,h]=u[d],[g,x]=u[d+1],w=Math.floor((c-h)/l),I=Math.floor((c-x)/l);if(I<w){let S=w;w=I,I=S}w=Math.max(0,w),I=Math.min(s-1,I);let T=(g-y)/(x-h);for(let S=w;S<=I;S++){let F=S===w?Math.max(h,x):(s+1-S)*l,k=S===I?Math.min(h,x):F-l,P=Math.floor(x===h?(y-o)/n:(T*(F-h)+y-o)/n),_=Math.floor(x===h?(g-o)/n:(T*(k-h)+y-o)/n);if(_<P){let M=P;P=_,_=M}let O=S*i;P=Math.max(0,P),_=Math.min(i-1,_);for(let M=O+P;M<=O+_;M++)a[M]=p?p[M]:255}}}return new X({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]})}function Ki(t,e,r,i=!0){let{spatialReference:s}=t,{x:a,y:n}=mr(r,s),l,o,c,m=e.type==="extent"?e:e.extent,{xmin:p,xmax:f,ymax:u,ymin:d}=m,{xmin:y,ymax:h}=t.extent;return i?(p=y+(p>y?a*Math.round((p-y)/a):0),u=h-(u<h?n*Math.round((h-u)/n):0),f=y+(f>y?a*Math.round((f-y)/a):0),d=h-(d<h?n*Math.round((h-d)/n):0),l=new L({xmin:p,ymax:u,xmax:f,ymin:d,spatialReference:s}),o=Math.round(l.width/a),c=Math.round(l.height/n)):(o=Math.floor((f-p)/a+.8),c=Math.floor((u-d)/n+.8),p=y+(p>y?a*Math.floor((p-y)/a+.1):0),u=h-(u<h?n*Math.floor((h-u)/n+.1):0),f=p+o*a,d=u-c*n,l=new L({xmin:p,ymax:u,xmax:f,ymin:d,spatialReference:s})),{extent:l,width:o,height:c}}var hr=40,fe=class extends K{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}open(t){return v(this,null,function*(){yield this.init();let{rasterFunction:e}=this;this.primaryRasters?.rasters?.length?e.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=e.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach(c=>c.rasterJobHandler=this.rasterJobHandler));let{rasters:r,rasterIds:i}=this.primaryRasters,s=r.map(c=>c.rasterInfo?void 0:c.open(t));yield Promise.all(s);let a=r.map(({rasterInfo:c})=>c),n=e.bind({rasterInfos:a,rasterIds:i});if(e.rawSourceRasterInfos=a,!n.success||a.length===0)throw new C("raster-function:open",`cannot bind the function: ${n.error??""}`);let l=e.functionName==="Table"?e:e.functionArguments?.raster;l?.functionName==="Table"&&(e.rasterInfo.attributeTable=ge.fromJSON(l.functionArguments.attributeTableAsRecordSet)),yield this.syncJobHandler();let o=a[0];this.hasUniqueSourceStorageInfo=a.length===1||a.slice(1).every(c=>dr(c,o)),this.set("sourceJSON",r[0].sourceJSON),this.set("rasterInfo",e.rasterInfo),yield this._updateClipGeometry()})}syncJobHandler(){return v(this,null,function*(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)})}fetchPixels(s,a,n){return v(this,arguments,function*(t,e,r,i={}){let{rasters:l,rasterIds:o}=this.primaryRasters,c=!1,{interpolation:m}=i,p=this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!i.requestRawData&&p&&(c=l.length===1&&!i.skipRasterFunction,i=B(E({},i),{interpolation:"bilinear",requestRawData:c}));let f=l.map(S=>S.fetchPixels(t,e,r,i)),u=yield Promise.all(f),d=u.map(S=>S.pixelBlock),y=c||i.requestRawData?u.map(S=>S.srcTilePixelSize):null;if(i.skipRasterFunction||d.every(S=>S==null))return u[0];let h=u.find(S=>S.pixelBlock!=null)?.extent??t,g=this.rasterJobHandler?yield this.rasterJobHandler.process({extent:h,primaryPixelBlocks:d,primaryPixelSizes:y,primaryRasterIds:o}):this.rasterFunction.process({extent:h,primaryPixelBlocks:d,primaryPixelSizes:y,primaryRasterIds:o}),{transformGrid:x}=u[0];if(!c||g==null||x==null){let S=i.noClip?null:this.getClippingGeometry(h.spatialReference);return i.noClip||i.requestRawData||g==null||!S||(g=yield Be(g,h,S)),B(E({},u[0]),{pixelBlock:g})}let w={rows:x.spacing[0],cols:x.spacing[1]},I;this.rasterJobHandler?I=(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[g],srcMosaicSize:{width:g.width,height:g.height},destDimension:{width:e,height:r},coefs:x.coefficients,sampleSpacing:w,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:m,alignmentInfo:void 0,blockWidths:null},i)).pixelBlock:I=qe(g,{width:e,height:r},x.coefficients,w,m);let T=i.noClip?null:this.getClippingGeometry(t.spatialReference);return i.noClip||i.requestRawData||I==null||T==null||(I=yield Be(I,t,T)),{extent:t,srcExtent:u[0].srcExtent,pixelBlock:I}})}getClippingGeometry(t){let e=this._clippingGeometry.get("0");if(!t||!e)return e;let r=yr(t),i=this._clippingGeometry.get(r);return i!=null||(i=t.equals(e.spatialReference)?e:Ne(e,t),this._clippingGeometry.set(r,i)),i}_updateClipGeometry(){return v(this,null,function*(){let t=this.rasterFunction.getClippingGeometries()[0],e=t?.clippingGeometry;if(e&&t.clippingType==="inside"){let{extent:r}=this.rasterInfo,{difference:i,densify:s}=yield import("./chunk-SYETQQI7.js"),a=s(Lt.fromExtent(r),2*(r.width+r.height)/hr);a=Ne(a,e.spatialReference),e=i(a,e)}this._clippingGeometry.clear(),e&&this._clippingGeometry.set("0",e)})}};b([R({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),b([R()],fe.prototype,"tileType",void 0),b([R()],fe.prototype,"rasterFunction",void 0),b([R()],fe.prototype,"primaryRasters",void 0),fe=b([W("esri.layers.support.rasterDatasets.FunctionRaster")],fe);var Ze=fe;function dr(t,e){let{storageInfo:r,pixelSize:i,spatialReference:s,extent:a}=t,{storageInfo:n,pixelSize:l,spatialReference:o,extent:c}=e;return i.x===l.x&&i.y===l.y&&s.equals(o)&&a.equals(c)&&r.blockHeight===n.blockHeight&&r.blockWidth===n.blockWidth&&r.maximumPyramidLevel===n.maximumPyramidLevel}function yr(t){return String(t.wkid??t.wkt??t.wkt2)}var Qi=t=>{let e=class extends t{constructor(...i){super(...i),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=i[0]?.raster?.datasetFormat==="Function"}get fullExtent(){return this.serviceRasterInfo?.extent}set multidimensionalDefinition(i){this._set("multidimensionalDefinition",i),this.updateRenderer()}set rasterFunction(i){i?.functionName?.toLowerCase()==="none"&&(i=void 0),this._set("rasterFunction",i),this.updateRasterFunction()}get rasterInfo(){return St(te.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(i){this._set("url",Ve(i,te.getLogger(this)))}set renderer(i){i==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",i),this.updateRenderer())}readRenderer(i,s,a){let n=s?.layerDefinition?.drawingInfo?.renderer;return Oi(n,a)||void 0}convertVectorFieldData(i,s){return v(this,null,function*(){let{serviceRasterInfo:a}=this;if(i==null||!a)return null;let n=this._rasterJobHandler.instance,l=a.dataType;return n?n.convertVectorFieldData({pixelBlock:i,dataType:l},s):vi(i,l)})}computeStatisticsHistograms(i,s){return v(this,null,function*(){yield this.load(s),i=ye(Gi,i).clone();let{serviceRasterInfo:a}=this;if(a==null)throw new C("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");let{geometry:n}=i;if(n==null)throw new C("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let l=n,{spatialReference:o}=a;n.spatialReference.equals(o)||(yield Oe(),l=n.type==="extent"?Ie(n,o):Ne(n,o));let c=i.pixelSize??new H({x:a.pixelSize.x,y:a.pixelSize.y,spatialReference:o}),{extent:m,width:p,height:f}=Ki(a,l,c),u=yield this.fetchPixels(m,p,f,B(E({},s),{interpolation:"nearest"}));if(u.pixelBlock==null)throw new C("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");let d=yield Be(u.pixelBlock,m,l),y=this._rasterJobHandler.instance;return y?y.computeStatisticsHistograms({pixelBlock:d},s):xe(d)})}createFlowMesh(i,s){return v(this,null,function*(){let a=this._rasterJobHandler.instance;return a?a.createFlowMesh(i,s):Fi(i.meshType,i.simulationSettings,i.flowData,s.signal!=null?s.signal:new AbortController().signal)})}normalizeRasterFetchOptions(i){let{multidimensionalInfo:s}=this.serviceRasterInfo??{};if(s==null)return i;let a=i.multidimensionalDefinition||this.multidimensionalDefinition;a?.length||(a=lt(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));let n=i.timeExtent||this.timeExtent;if(a!=null&&n!=null&&(n.start!=null||n.end!=null)){a=a.map(y=>y.clone());let l=s.variables.find(({name:y})=>y===a[0].variableName)?.dimensions?.find(({name:y})=>y==="StdTime"),o=a.find(({dimensionName:y})=>y==="StdTime");if(!l||!o)return B(E({},i),{multidimensionalDefinition:null});let{start:c,end:m}=n,p=c==null?null:c.getTime(),f=m==null?null:m.getTime(),u=p??f,d=f??p;if(l.values!=null){let y=l.values.filter(h=>{if(Array.isArray(h)){if(u===d)return h[0]<=u&&h[1]>=u;let g=h[0]<=u&&h[1]>u||h[0]<d&&h[1]>=d,x=h[0]>=u&&h[1]<=d||h[0]<u&&h[1]>d;return g||x}return u===d?h===u:h>=u&&h<=d});if(y.length){let h=y.sort((g,x)=>{let w=Array.isArray(g)?g[0]:g,I=Array.isArray(g)?g[1]:g,T=Array.isArray(x)?x[0]:x,S=Array.isArray(x)?x[1]:x;return u===d?w-T:Math.abs(I-d)-Math.abs(S-d)})[0];o.values=[h]}else a=null}else if(l.hasRegularIntervals&&l.extent){let[y,h]=l.extent;u>h||d<y?a=null:o.values=u===d?[u]:[Math.max(y,u),Math.min(h,d)]}}return a!=null&&Ai(a,this.multidimensionalSubset)?B(E({},i),{multidimensionalDefinition:null}):B(E({},i),{multidimensionalDefinition:a})}updateRasterFunction(){return v(this,null,function*(){if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){let m=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&m&&this._set("rasterFunction",Ee.fromJSON(m)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let i,s=this.raster,a=!1;s.datasetFormat==="Function"?(i=s.primaryRasters.rasters,s=i[0],a=!0):i=[s];let{rasterFunction:n}=this;if(n){let m={raster:s};i.length>1&&i.forEach(u=>m[u.url]=u);let p=$e(n.functionDefinition?.toJSON()??n.toJSON(),m),f=new Ze({rasterFunction:p});f.rasterJobHandler=this._rasterJobHandler.instance,yield f.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=f}else this.raster=s,this._cachedRasterFunctionJson=null,yield s.when();if(this._cachedRendererJson=null,!a&&!n)return;let{bandIds:l}=this,{bandCount:o}=this.raster.rasterInfo,c=l?.length?l.some(m=>m>=o):o>=3;l&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")})}updateRenderer(){return v(this,null,function*(){let{loaded:i,symbolizer:s}=this;if(!i||!s||!this.renderer)return;let{rasterInfo:a}=this.raster,n=ot(a,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),l=n?.name,o=ut(B(E({},this.renderer.toJSON()),{variableName:l}));if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(o))return;let c=this._rasterJobHandler.instance;c&&(s.rasterInfo=mt(a,l),s.rendererJSON=o,s.bind(),yield c.updateSymbolizer(s),this._cachedRendererJson=o)})}applyRenderer(i,s){return v(this,null,function*(){let a=i?.pixelBlock;if(!(a!=null&&a.pixels&&a.pixels.length>0))return null;let n;yield this.updateRenderer();let l=this._rasterJobHandler.instance,o=this.bandIds??[];return n=l?yield l.symbolize(B(E({},i),{simpleStretchParams:s,bandIds:o})):this.symbolizer.symbolize(B(E({},i),{simpleStretchParams:s,bandIds:o})),n})}getTileUrl(i,s,a){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${i}/${s}/${a}`:""}getCompatibleTileInfo(i,s,a=!1){if(!this.loaded||s==null)return null;if(a&&i.equals(this.spatialReference))return this.tileInfo;let n=Et(i);return ie.create({size:256,spatialReference:i,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(i){return this.loaded?(this._compatibleFullExtent?.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}fetchTile(l,o,c){return v(this,arguments,function*(i,s,a,n={}){if(r(this),n.requestAsImageElement){let p=this.getTileUrl(i,s,a);return je(p,{responseType:"image",query:E(E({},this.refreshParameters),this.raster.ioConfig.customFetchParameters),signal:n.signal}).then(f=>f.data)}let{serviceRasterInfo:m}=this;if(m.multidimensionalInfo!=null&&(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition==null){let p=n.tileInfo||m.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,s,a,p),pixelBlock:null}}return yield this._initJobHandler(),yield this.updateRasterFunction(),this.renderer?.type==="raster-shaded-relief"&&(n=B(E({},n),{buffer:{cols:1,rows:1}})),this.raster.fetchTile(i,s,a,n)})}fetchPixels(l,o,c){return v(this,arguments,function*(i,s,a,n={}){return this.serviceRasterInfo.multidimensionalInfo!=null&&(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition==null?{extent:i,pixelBlock:null}:(yield this._initJobHandler(),yield this.updateRasterFunction(),s=Math.round(s),a=Math.round(a),this.raster.fetchPixels(i,s,a,n))})}identify(a){return v(this,arguments,function*(i,s={}){yield this.load();let{raster:n,serviceRasterInfo:l}=this;if(l?.multidimensionalInfo!=null&&!(l.hasMultidimensionalTranspose&&(Ke(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null)return{location:i,value:null};let o=this.multidimensionalSubset?.areaOfInterest;if(o&&!o.contains(i))throw new C("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(i,s)})}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){let i=this.serviceRasterInfo?.multidimensionalInfo;if(i==null||this.serviceRasterInfo?.dataType!=="standard-time")return!1;let s=this.multidimensionalDefinition,a=s?.[0]?.variableName;return i.variables.some(n=>n.name===a&&(!s?.[0].dimensionName||n.dimensions.some(l=>l.name==="StdTime")))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(i){let s=i??this.serviceRasterInfo?.multidimensionalInfo;return Li(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=lt(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;let i=new Ei;return this._rasterJobHandler.connectionPromise=i.initialize().then(()=>v(this,null,function*(){r(this),this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&(yield this.updateRasterFunction().catch(()=>{})),this.renderer&&this.updateRenderer()})).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(this.interpolation==null){r(this);let{raster:i}=this,s=zi(i.rasterInfo,i.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",s)}}_configDefaultRenderer(i="no"){r(this);let{rasterInfo:s}=this.raster;!this.bandIds&&s.bandCount>1&&(this.bandIds=Wi(s));let a=ot(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),n=a?.name,l=Hi(this.raster);if(!this.renderer||i==="override"){let p=ct(s,{bandIds:this.bandIds,variableName:n,rasterFunctionColorRamp:l}),f=s.statistics,u=f&&f.length>0?f[0]:null,d=u?.max??0,y=u?.min??0;this.raster.datasetFormat==="WCSServer"&&p.type==="raster-stretch"&&(d>1e24||y<-1e24)&&(p.dynamicRangeAdjustment=!0,p.statistics=null,p.stretchType==="none"&&(p.stretchType="min-max")),this.renderer=p}let o=ut(B(E({},this.renderer.toJSON()),{variableName:n})),c=mt(s,n);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=c):this.symbolizer=new _i({rendererJSON:o,rasterInfo:c});let m=this.symbolizer.bind();if(m.success){if(i==="auto"){let{colormap:p}=this.raster.rasterInfo,f=this.renderer;if(p!=null&&f.type==="raster-colormap"){let u=ct(this.raster.rasterInfo);JSON.stringify(u)!==JSON.stringify(f)&&this._configDefaultRenderer("override")}else if(f.type==="raster-stretch"){let u=this.bandIds?.length,d=f.statistics?.length;!f.dynamicRangeAdjustment&&d&&u&&d!==u&&this._configDefaultRenderer("override")}}}else te.getLogger(this).warn("imagery-tile-mixin",m.error||"The given renderer is not supported by the layer."),i==="auto"&&this._configDefaultRenderer("override")}};function r(i){if(!i.raster||!i.serviceRasterInfo)throw new C("imagery-tile","no raster")}return b([R({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),b([R({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),b([R({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),b([R({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),b([R({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),b([R()],e.prototype,"bandIds",void 0),b([R({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),b([R({json:{read:!1}})],e.prototype,"fullExtent",null),b([R()],e.prototype,"interpolation",void 0),b([R()],e.prototype,"ioConfig",void 0),b([R({type:[Re],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),b([R({type:Di,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),b([R()],e.prototype,"raster",void 0),b([R({type:Ee,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),b([R({readOnly:!0})],e.prototype,"rasterInfo",null),b([R()],e.prototype,"serviceRasterInfo",void 0),b([R()],e.prototype,"sourceJSON",void 0),b([R({readOnly:!0,type:A,json:{read:!1}})],e.prototype,"spatialReference",void 0),b([R({type:ie})],e.prototype,"tileInfo",void 0),b([R(Xe)],e.prototype,"url",null),b([R({types:Ci,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){let i=this.renderer?.type==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!i}}},origins:{"web-scene":{types:Pi,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:i=>({enabled:i&&i.type!=="vector-field"&&i.type!=="flow"})}}}}})],e.prototype,"renderer",null),b([Jt("renderer")],e.prototype,"readRenderer",null),b([R({clonable:!1})],e.prototype,"symbolizer",void 0),e=b([W("esri.layers.mixins.ImageryTileMixin")],e),e};function gt(t){return["x","e","east","long","longitude"].includes(t.toLowerCase())}function xt(t){return["y","n","west","lat","latitude"].includes(t.toLowerCase())}function gr(t){let{axes:e}=t.domain,r=Object.keys(e),i=[],s=[],a=-1,n=-1,l=[];for(let x=0;x<r.length;x++){let w=r[x];gt(w)?a=x:xt(w)&&(n=x);let I=e[w],T=[];if("values"in I){I.values.forEach(F=>T.push(typeof F=="string"?new Date(F).getTime():F));let S=T[1]-T[0];i.push([T[0]-.5*S,T[T.length-1]+.5*S]),s.push(S)}else{let{start:S,stop:F,num:k}=I,P=(F-S)/(k-1);i.push([S-.5*P,F+.5*P]),s.push(P);for(let _=0;_<k;_++)T.push(S+P*_)}l.push({name:w,values:T,extent:[T[0],T[T.length-1]]})}a>-1&&n===-1?n=a===0?1:0:n>-1&&a===-1?a=n===0?1:0:n===-1&&a===-1&&(a=0,n=1),l=l.filter((x,w)=>!(w===a||w===n));let{referencing:o}=t.domain,c=o.find(x=>x.coordinates.includes(r[a])).system.id,m=c?.slice(c.lastIndexOf("/")+1),p=m==null||m==="CRS84"?4326:Number(m),f=new A({wkid:p}),[u,d]=i[a],[y,h]=i[n],g=new L({xmin:u,xmax:d,ymin:y,ymax:h,spatialReference:f});return{width:Math.round(g.width/s[a]),height:Math.round(g.height/s[n]),extent:g,dimensions:l}}function dt(t){let e=Ot();return e?t[e]??Object.values(t)[0]:Object.values(t)[0]}function yt(){return Math.round(255*Math.random())}function xr(t){let e={},{parameters:r}=t;if(!r)return e;for(let[i,s]of Object.entries(r)){let{type:a,description:n,unit:l,categoryEncoding:o,observedProperty:c}=s;if(a==="Parameter"&&(e[i]={},n&&(e[i].description=dt(n)),l&&(e[i].unit=l.label?dt(l.label):null,e[i].symbol=l.symbol?.value),o)){let m=Object.entries(o).map((u,d)=>({OID:d,Value:Number(u[1]),ClassName:u[0].slice(u[0].lastIndexOf("/")+1),Count:1})),p=!1;c?.categories?.length&&(c.categories.forEach(u=>{if(!u.id)return;let d=u.id.slice(u.id.lastIndexOf("/")+1),y=m.find(g=>g.ClassName===d);if(!y)return;let h=u.label?dt(u.label):null;if(y.Label=h,u.preferredColor){let g=qt.fromHex(u.preferredColor);g&&(p=!0,y.Red=g.r,y.Green=g.g,y.Blue=g.b)}}),p&&m.forEach(u=>{u.Red==null&&(u.Red=yt(),u.Green=yt(),u.Blue=yt())}));let f={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:m.map(u=>({attributes:u}))};p&&f.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[i].attributeTable=f}}return e}function wr(t){let e=Number.MAX_VALUE,r=-Number.MAX_VALUE;for(let i=0;i<t.length;i++){let s=t[i];s!=null&&(s<e&&(e=s),s>r&&(r=s))}return ei(e,r)}function Ir(t,e,r){let i=t.map((o,c)=>({name:o,count:e[c]})).sort((o,c)=>o.name>c.name?-1:1),s=(a=1,o=>a*=o.count);var a;let n=[...i.slice(1),{name:"",count:1}].reverse().map(s).reverse(),l=0;for(let o=t.length-1;o>=0;o--)l+=n[i.findIndex(({name:c})=>c===t[o])]*(r%e[o]),r=Math.floor(r/e[o]);return l}function Zi(t){let{width:e,height:r,extent:i,dimensions:s}=gr(t),{ranges:a}=t,n=Object.keys(a).sort((f,u)=>f<u?-1:1),l=[];for(let f=0;f<n.length;f++){let u=n[f];s?.length&&l.push({name:u,dimensions:s})}let o=xr(t);l.forEach(f=>o[f.name]&&Object.assign(f,o[f.name]));let c=l.length?{variables:l}:void 0,m=[];for(let f=0;f<n.length;f++){let u=n[f],{values:d,dataType:y,axisNames:h,shape:g}=a[u],x=g.length>2?f*g.slice(0,-2).reduce((k,P)=>k*P):0,w=h.slice(0,-2),I=g.slice(0,-2),T=y==="float"?"f32":wr(d),S=e*r,F=d.length/S;for(let k=0;k<F;k++){let P=X.createEmptyBand(T,S),_=new Uint8Array(S).fill(255),O=!1,M=k*S;for(let D=0;D<S;D++){let N=d[M+D];N==null?(_[D]=0,O=!0):P[D]=N}if(f===0||s?.length){let D=new X({width:e,height:r,mask:O?_:null,pixels:[P],pixelType:T});D.updateStatistics(),s?.length?m[Ir(w,I,k)+x]=D:m.push(D)}else{let D=m[k];D.pixels.push(P),O?D.mask&&(D.mask=X.combineBandMasks([D.mask,_])):D.mask=O?_:null}}}let p=Object.values(o).find(f=>f.attributeTable)?.attributeTable;return{extent:i,pixelBlocks:m,multidimensionalInfo:c,attributeTable:p,bandNames:c?void 0:n}}var Se=class extends K{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}open(t){return v(this,null,function*(){yield this.init();let e=this.source,{pixelBlocks:r,attributeTable:i,statistics:s,histograms:a,name:n,nativeExtent:l,transform:o}=e,c=r[0],{width:m,height:p,pixelType:f}=c,u=e.extent??new L({xmin:-.5,ymin:.5,xmax:m-.5,ymax:p-.5,spatialReference:new A({wkid:3857})}),d=e.isPseudoSpatialReference??!e.extent,y={x:u.width/m,y:u.height/p},h=E({},e.keyProperties);i&&(h.DataType="Thematic");let g=new oe({width:m,height:p,pixelType:f,extent:u,nativeExtent:l,attributeTable:i,transform:o,pixelSize:y,spatialReference:u.spatialReference,bandCount:c.pixels.length,keyProperties:h,multidimensionalInfo:e.multidimensionalInfo,statistics:s,isPseudoSpatialReference:d,histograms:a});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(g),this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),g.multidimensionalInfo?yield this._buildMDimStats(e.pixelBlocks,g.multidimensionalInfo):yield this._buildInMemoryRaster(c,{width:512,height:512},t),g.multidimensionalInfo||(this.source=null),this.datasetName=n})}fetchRawTile(t,e,r,i={}){if(!this._pixelBlockTiles){let{rasterInfo:a}=this,[n,l]=a.storageInfo.tileInfo.size,{sliceId:o}=i,{pixelBlocks:c}=this.source,m={pixelBlock:o==null?c[0]:c[o],useBilinear:a.dataType!=="thematic",tileSize:{width:n,height:l},level:t,row:e,col:r},p=this.rasterJobHandler?this.rasterJobHandler.clipTile(m,i):hi(m);return Promise.resolve(p)}let s=this._pixelBlockTiles.get(`${t}/${e}/${r}`);return Promise.resolve(s)}_buildInMemoryRaster(t,e,r){return v(this,null,function*(){let{rasterInfo:i}=this,s=i.storageInfo.maximumPyramidLevel??0,a=i.dataType!=="thematic",n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:s,useBilinear:a},r):Promise.resolve(fi(t,e,s,a)),l=i.statistics!=null,o=i.histograms!=null,c=this.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Promise.resolve(yi(t)),m=yield Ge([n,c]);if(!m[0].value&&m[1].value)throw new C("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=m[0].value,l||(i.statistics=m[1].value?.statistics),o||(i.histograms=m[1].value?.histograms)})}_buildMDimStats(t,e,r){return v(this,null,function*(){for(let i=0;i<e.variables.length;i++){let s=e.variables[i];if(s.statistics)continue;let a=s.dimensions.map(c=>new Re({variableName:s.name,dimensionName:c.name,values:[c.values?.[0]??c.extent?.[0]],isSlice:!0})),n=Qe(a,e),l=n==null?null:t[n];if(l==null)continue;let o=this.rasterJobHandler?yield this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},r):xe(l);s.statistics=o.statistics,s.histograms||(s.histograms=o.histograms)}})}};b([R({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),b([R()],Se.prototype,"source",void 0),b([R()],Se.prototype,"url",null),Se=b([W("esri.layers.support.rasterDatasets.InMemoryRaster")],Se);var ve=Se;var Je=class extends K{constructor(){super(...arguments),this.datasetFormat="CovJSON"}open(t){return v(this,null,function*(){yield this.init();let{extent:e,pixelBlocks:r,multidimensionalInfo:i,attributeTable:s,bandNames:a}=yield this._fetchData(t),{statistics:n,histograms:l}=xe(r[0]),o=a?.map(f=>({BandName:f})),c={DataType:s?"Thematic":i?"Scientific":"Generic",BandProperties:o},m=new ve({source:{extent:e,pixelBlocks:r,attributeTable:s?ge.fromJSON(s):null,multidimensionalInfo:i,statistics:n,histograms:l,keyProperties:c,isPseudoSpatialReference:!1}});yield m.open(),this._inMemoryRaster=m;let p=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",p.slice(0,p.indexOf("."))),this._set("rasterInfo",m.rasterInfo)})}fetchRawTile(t,e,r,i={}){return this._inMemoryRaster.fetchRawTile(t,e,r,i)}_fetchData(t){return v(this,null,function*(){let e=this.source??(yield this.request(this.url,{signal:t?.signal})).data,r="imagery-tile-layer:open-coverage-json";if(e.type?.toLowerCase()!=="coverage"||e.domain?.domainType?.toLowerCase()!=="grid")throw new C(r,"Only coverage with Grid domain type is supported");if(!e.ranges)throw new C(r,"Missing ranges in the grid coverage data");if(!e.domain.referencing?.length)throw new C(r,"Missing domain referencing in the grid coverage data");let i=Object.values(e.ranges);for(let s=0;s<i.length;s++){let{axisNames:a,shape:n,type:l,values:o}=i[s];if(!(l.toLowerCase()==="ndarray"&&o?.length&&a?.length&&n?.length))throw new C(r,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(gt(a[a.length-1])&&xt(a[a.length-2])))throw new C(r,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return Zi(e)})}};b([R({type:String,json:{write:!0}})],Je.prototype,"datasetFormat",void 0),b([R({constructOnly:!0})],Je.prototype,"source",void 0),Je=b([W("esri.layers.support.rasterDatasets.CovJSONRaster")],Je);var er=Je;function he(t,e){if(!t||!e)return[];let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";let i=[];if(e){let a=he(t,r);for(let n=0;n<a.length;n++)he(a[n],e).forEach(l=>i.push(l));return i}let s=t.getElementsByTagNameNS("*",r);if(!s||s.length===0)return[];for(let a=0;a<s.length;a++)i.push(s[a]||s.item(a));return i}function Q(t,e){if(!t||!e)return null;let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";let i=he(t,r);return i.length>0?e?Q(i[0],e):i[0]:null}function ee(t,e=null){let r=e?Q(t,e):t,i;return r?(i=r.textContent||r.nodeValue,i?i.trim():null):null}function br(t,e){let r=he(t,e),i=[],s;for(let a=0;a<r.length;a++)s=r[a].textContent||r[a].nodeValue,s&&(s=s.trim(),s!==""&&i.push(s));return i}function Ae(t,e){return br(t,e).map(r=>Number(r))}function le(t,e){let r=ee(t,e);return Number(r)}function et(t,e){let r=t?.nodeName?.toLowerCase(),i=e.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===i}function tr(t,e){if(!t||!e)return null;let r=[];for(let i=0;i<t.length;i++)r.push(t[i]),r.push(e[i]);return r}function Rr(t){let e=Q(t,"GeodataXform"),r=Te(le(e,"SpatialReference/WKID")||ee(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:r,transform:null};let i=le(e,"PolynomialOrder")??1,s=Ae(e,"CoeffX/Double"),a=Ae(e,"CoeffY/Double"),n=Ae(e,"InverseCoeffX/Double"),l=Ae(e,"InverseCoeffY/Double"),o=tr(s,a),c=tr(n,l);return{spatialReference:r,transform:o&&c&&o.length&&c.length?new be({spatialReference:r,polynomialOrder:i,forwardCoefficients:o,inverseCoefficients:c}):null}}function Sr(t){let e=le(t,"NoDataValue"),r=Q(t,"Histograms/HistItem"),i=le(r,"HistMin"),s=le(r,"HistMax"),a=le(r,"BucketCount"),n=ee(r,"HistCounts")?.split("|").map(f=>Number(f)),l,o,c,m;he(t,"Metadata/MDI").forEach(f=>{let u=Number(f.textContent??f.nodeValue);switch(f.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=u;break;case"STATISTICS_MAXIMUM":o=u;break;case"STATISTICS_MEAN":c=u;break;case"STATISTICS_STDDEV":m=u}});let p=le(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:n?.length&&i!=null&&s!=null?{min:i,max:s,size:a||n.length,counts:n}:null,sourceBandIndex:p,statistics:l!=null&&o!=null?{min:l,max:o,avg:c,stddev:m}:null}}function Te(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new A({wkid:e});if(t=String(t).trim(),Bt(t))return new A({wkt2:t});let r=t.toUpperCase();if(r.startsWith("COMPD_CS")){if(!r.includes("VERTCS")||!r.includes("GEOGCS")&&!r.startsWith("PROJCS"))return null;let i=r.indexOf("VERTCS"),s=r.indexOf("PROJCS"),a=s>-1?s:r.indexOf("GEOGCS");if(a===-1)return null;let n=t.slice(a,t.lastIndexOf("]",i)+1).trim(),l=t.slice(i,t.lastIndexOf("]")).trim();e=wt(n);let o=new A(e?{wkid:e}:{wkt:n}),c=wt(l);return c&&(o.vcsWkid=c),o}return r.startsWith("GEOGCS")||r.startsWith("PROJCS")?(e=wt(t),new A(e!==0?{wkid:e}:{wkt:t})):null}function wt(t){let e=t.replaceAll("]","[").replaceAll('"',"").split("[").map(s=>s.trim()).filter(s=>s!==""),r=e[e.length-1].split(","),i=r[0]?.toLowerCase();if((i==="epsg"||i==="esri")&&t.endsWith('"]]')){let s=Number(r[1]);if(!isNaN(s)&&s!==0)return s}return 0}function _e(t){if(t?.documentElement.tagName?.toLowerCase()!=="pamdataset")return{};let e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(i=>{if(i.nodeType===1){if(et(i,"SRS")){if(!e.spatialReference){let s=ee(i);e.spatialReference=Te(s)}}else if(et(i,"Metadata"))if(i.getAttribute("domain")==="xml:ESRI"){let{spatialReference:s,transform:a}=Rr(i);e.transform=a,e.spatialReference||(e.spatialReference=s)}else he(i,"MDI").forEach(s=>e.metadata[s.getAttribute("key")]=ee(s));else if(et(i,"PAMRasterBand")){let s=Sr(i);s.sourceBandIndex!=null&&e.rasterBands[s.sourceBandIndex]==null?e.rasterBands[s.sourceBandIndex]=s:e.rasterBands.push(s)}}});let r=e.rasterBands;if(r.length){let i=!!r[0].statistics;e.statistics=i?r.map(a=>a.statistics).filter(ke):null;let s=!!r[0].histogram;e.histograms=s?r.map(a=>a.histogram).filter(ke):null}return e}var tt=class extends K{open(t){return v(this,null,function*(){yield this.init();let e=yield this._fetchData(t),{spatialReference:r,statistics:i,histograms:s,transform:a}=yield this._fetchAuxiliaryData(t),n=!r;n&&(r=new A({wkid:3857})),s?.length&&i==null&&(i=we(s));let{width:l,height:o}=e,c=new L({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:r}),m=a?a.forwardTransform(c):c,p=!0;if(a){let u=a.forwardCoefficients;p=u&&u[1]===0&&u[2]===0,p&&(a=null,c=m)}let f=new ve({source:{extent:m,nativeExtent:c,transform:a,pixelBlocks:[e],statistics:i,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:n},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),yield f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f})}fetchRawTile(t,e,r,i={}){return this._inMemoryRaster.fetchRawTile(t,e,r,i)}_fetchData(t){return v(this,null,function*(){let{data:e}=yield this.request(this.url,{responseType:"array-buffer",signal:t?.signal}),r=mi(e).toUpperCase();if(r!=="JPG"&&r!=="PNG"&&r!=="GIF"&&r!=="BMP")throw new C("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);let i=r.toLowerCase(),s=i==="gif"||i==="bmp"||!Rt("ios"),a=yield this.decodePixelBlock(e,{format:i,useCanvas:s,hasNoZlibMask:!0});if(a==null)throw new C("image-aux-raster:open","the data cannot be decoded");return a})}_fetchAuxiliaryData(t){return v(this,null,function*(){let e=t?.signal,{skipExtensions:r=[],skipMapInfo:i}=this.ioConfig,s=i||r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),a=this.datasetFormat,n=a==="JPG"?"jgw":a==="PNG"?"pgw":a==="BMP"?"bpw":null,l=n&&r.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),o=yield Ge([s,l]);if(e?.aborted)throw Tt();let c=_e(o[0].value?.data);if(!c.transform){let m=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(p=>Number(p)):null;c.transform=m?.length===6?new be({forwardCoefficients:[m[4],m[5],m[0],-m[1],m[2],-m[3]]}):null}return c})}};b([R({type:String,json:{write:!0}})],tt.prototype,"datasetFormat",void 0),tt=b([W("esri.layers.support.rasterDatasets.ImageAuxRaster")],tt);var Le=tt;var He=class extends K{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}open(t){return v(this,null,function*(){yield this.init();let e=t?.signal,r=this.sourceJSON?{data:this.sourceJSON}:yield this.request(this.url,{query:{f:"json"},signal:e});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let i=r.data;if(this.sourceJSON=i,!i)throw new C("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new C("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();let s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,this.tileType==null&&(s.includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":i.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=i.name?.slice(i.name.indexOf("/")+1)??"";let a=yield this._fetchRasterInfo({signal:e});if(a==null)throw new C("image-server-raster:open","cannot initialize image service");Vi(a,i);let n=this.tileType==="Map"?vr(i.tileInfo,i):ie.fromJSON(i.tileInfo);vt(n);let[l,o]=this._computeMinMaxLOD(a,n),{extent:c,pixelSize:m}=a,p=.5/a.width*m.x,f=Math.max(m.x,m.y),{lods:u}=n;(this.tileType!=="Map"&&i.maxScale!==0||Math.abs(m.x-m.y)>p||!u.some(F=>Math.abs(F.resolution-f)<p))&&(m.x=m.y=l.resolution,a.width=Math.ceil((c.xmax-c.xmin)/m.x-.1),a.height=Math.ceil((c.ymax-c.ymin)/m.y-.1));let d=l.level-o.level,[y,h]=n.size,g=[],x=[];u.forEach((F,k)=>{F.level>=o.level&&F.level<=l.level&&g.push({x:F.resolution,y:F.resolution}),k<u.length-1&&x.push(Math.round(10*F.resolution/u[k+1].resolution)/10)}),g.sort((F,k)=>F.x-k.x);let w=this.computeBlockBoundary(c,y,h,n.origin,g,d),I=g.length>1?g.slice(1):null,T;i.transposeInfo&&(T={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:a.keyProperties?._yxs.PacketSize??0});let S=x.length<=1||x.length>=3&&x.slice(0,-1).every(F=>F===x[0])?x[0]??2:Math.round(10/(o.resolution/l.resolution)**(-1/d))/10;if(a.storageInfo=new ae({blockWidth:n.size[0],blockHeight:n.size[1],pyramidBlockWidth:n.size[0],pyramidBlockHeight:n.size[1],pyramidResolutions:I,pyramidScalingFactor:S,compression:n.format,origin:n.origin,firstPyramidLevel:1,maximumPyramidLevel:d,tileInfo:n,transposeInfo:T,blockBoundary:w}),Tr(a),this._set("rasterInfo",a),i.capabilities.toLowerCase().includes("tilemap")){let F={tileInfo:a.storageInfo.tileInfo,parsedUrl:Pt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new $i({layer:F})}})}fetchRawTile(s,a,n){return v(this,arguments,function*(t,e,r,i={}){let{storageInfo:l,extent:o}=this.rasterInfo,{transposeInfo:c}=l,m=c!=null&&!!i.transposedVariableName;if(this._slices&&!m&&i.sliceId==null)return null;let p=m?0:l.maximumPyramidLevel-t+this._levelOffset,f=`${this.url}/tile/${p}/${e}/${r}`,u=this._slices?m?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:d}=yield this.request(f,{query:u,responseType:"array-buffer",signal:i.signal});if(!d)return null;let y=m?c.tileSize:l.tileInfo.size,h=yield this.decodePixelBlock(d,{width:y[0],height:y[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:m,noDataValue:this.rasterInfo.noDataValue});if(h==null)return null;let g=l.blockBoundary[t];if(l.compression!=="jpg"||r>g.minCol&&r<g.maxCol&&e>g.minRow&&e<g.maxRow)return h;let{origin:x,blockWidth:w,blockHeight:I}=l,{x:T,y:S}=this.getPyramidPixelSize(t),F=Math.round((o.xmin-x.x)/T)%w,k=Math.round((o.xmax-x.x)/T)%w||w,P=Math.round((x.y-o.ymax)/S)%I,_=Math.round((x.y-o.ymin)/S)%I||I,O=r===g.minCol?F:0,M=e===g.minRow?P:0,D=r===g.maxCol?k:w,N=e===g.maxRow?_:I;return pi(h,{x:O,y:M},{width:D-O,height:N-M}),h})}getSliceIndex(t){if(!this._slices||t==null||t.length===0)return null;let e=t;for(let r=0;r<this._slices.length;r++){let i=this._slices[r].multidimensionalDefinition;if(i.length===e.length&&!i.some(s=>{let a=e.find(n=>s.variableName===n.variableName&&n.dimensionName===s.dimensionName);return a?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return r}return null}fetchVariableStatisticsHistograms(t,e){return v(this,null,function*(){let r=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(a=>a.data?.statistics),i=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(a=>a.data?.histograms),s=yield Promise.all([r,i]);return s[0]&&s[0].forEach(a=>{a.avg=a.mean,a.stddev=a.standardDeviation}),s[1]?.[0]?.counts?.length||(s[1]=null),{statistics:s[0]||null,histograms:s[1]||null}})}computeBestPyramidLevelForLocation(r){return v(this,arguments,function*(t,e={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(t,0,e.datumTransformation);if(i===null)return null;let s=0,{maximumPyramidLevel:a}=this.rasterInfo.storageInfo,n=a-s+this._levelOffset,l=i.srcLocation;for(;n>=0;){try{if((yield this._tilemapCache.fetchAvailability(n,i.row,i.col,e))==="available")break}catch{}if(n--,s++,i=this.identifyPixelLocation(l,s,e.datumTransformation),i===null)return null}return n===-1||i==null?null:s})}_fetchRasterInfo(t){return v(this,null,function*(){let e=this.sourceJSON;if(this.tileType==="Map"){let n=e.fullExtent||e.extent,l=Math.ceil((n.xmax-n.xmin)/e.pixelSizeX-.1),o=Math.ceil((n.ymax-n.ymin)/e.pixelSizeY-.1),c=A.fromJSON(e.spatialReference||n.spatialReference),m=new H({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new oe({width:l,height:o,bandCount:3,extent:L.fromJSON(n),spatialReference:c,pixelSize:m,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}let{signal:r}=t,i=ji(this.url,this.sourceJSON,{signal:r,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:r}).then(n=>n.data?.slices).catch(()=>null):null,a=yield Promise.all([i,s]);return this._slices=a[1],a[0]})}_fixScaleInServiceInfo(){let{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_computeMinMaxLOD(t,e){let{pixelSize:r}=t,i=.5/t.width*r.x,{lods:s}=e,a=e.lodAt(Math.max.apply(null,s.map(f=>f.level))),n=e.lodAt(Math.min.apply(null,s.map(f=>f.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=s[0].level,[a,n];if(l==="Raster")return[s.find(f=>f.resolution===r.x)??a,n];let{minScale:o,maxScale:c}=this.sourceJSON,m=a;c>0&&(m=s.find(f=>Math.abs(f.scale-c)<i),m||(m=s.filter(f=>f.scale>c).sort((f,u)=>f.scale>u.scale?1:-1)[0]??a));let p=n;return o>0&&(p=s.find(f=>Math.abs(f.scale-o)<i)??n,this._levelOffset=p.level-n.level),[m,p]}};function vr(t,e){if(!t)return null;let{minScale:r,maxScale:i,minLOD:s,maxLOD:a}=e;if(s!=null&&a!=null)return ie.fromJSON(B(E({},t),{lods:t.lods.filter(({level:n})=>n!=null&&n>=s&&n<=a)}));if(r!==0&&i!==0){let n=c=>Math.round(1e4*c)/1e4,l=r?n(r):1/0,o=i?n(i):-1/0;return ie.fromJSON(B(E({},t),{lods:t.lods.filter(c=>{let m=n(c.scale);return m<=l&&m>=o})}))}return ie.fromJSON(t)}function Tr(t){let{extent:e,spatialReference:r}=t;e.xmin>-1&&e.xmax>181&&r?.wkid&&r.isGeographic&&(t.nativeExtent=t.extent,t.transform=new Ti,t.extent=t.transform.forwardTransform(e))}b([R({type:String,json:{write:!0}})],He.prototype,"datasetFormat",void 0),b([R()],He.prototype,"tileType",void 0),He=b([W("esri.layers.support.rasterDatasets.ImageServerRaster")],He);var ir=He;var re=new Map;re.set("Int8","s8"),re.set("UInt8","u8"),re.set("Int16","s16"),re.set("UInt16","u16"),re.set("Int32","s32"),re.set("UInt32","u32"),re.set("Float32","f32"),re.set("Float64","f32"),re.set("Double64","f32");var ce=new Map;ce.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ce.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ce.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ce.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});var Fe=class extends K{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}open(t){return v(this,null,function*(){yield this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);let e=t?t.signal:null,r=yield this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:i,files:s}=this._parseHeader(r.data),{skipMapInfo:a,skipExtensions:n=[]}=this.ioConfig;if(!n.includes("aux.xml")&&!a){let g=yield this._fetchAuxiliaryData(t);g!=null&&(i.statistics=g.statistics??i.statistics,i.histograms=g.histograms,g.histograms&&i.statistics==null&&(i.statistics=we(g.histograms)))}a&&this.updateImageSpaceRasterInfo(i),this._set("rasterInfo",i),this._files=s;let l=yield this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=_r(l.data);let{blockWidth:o,blockHeight:c}=this.rasterInfo.storageInfo,m=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:p,height:f}=this.rasterInfo,u=[],d=this._getBandSegmentCount(),y=0,h=-1;for(;y<this._storageIndex.length;){h++;let g=Math.ceil(p/o/m**h)-1,x=Math.ceil(f/c/m**h)-1;y+=(g+1)*(x+1)*d*4,u.push({maxRow:x,maxCol:g,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=u,h>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=h),this.updateTileInfo()})}fetchRawTile(s,a,n){return v(this,arguments,function*(t,e,r,i={}){let{blockWidth:l,blockHeight:o,blockBoundary:c}=this.rasterInfo.storageInfo,m=c[t];if(!m||m.maxRow<e||m.maxCol<r||m.minRow>e||m.minCol>r)return null;let{bandCount:p,pixelType:f}=this.rasterInfo,{ranges:u,actualTileWidth:d,actualTileHeight:y}=this._getTileLocation(t,e,r);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){let N=new Uint8Array(l*o);return new X({width:l,height:o,pixels:void 0,mask:N,validPixelCount:0})}let{bandIds:h}=this.ioConfig,g=this._getBandSegmentCount(),x=[],w=0;for(w=0;w<g;w++)h&&!h.includes(w)||x.push(this.request(this._files.data,{range:{from:u[w].from,to:u[w].to},responseType:"array-buffer",signal:i.signal}));let I=yield Promise.all(x),T=I.map(N=>N.data.byteLength).reduce((N,J)=>N+J),S=new Uint8Array(T),F=[],k=0;for(w=0;w<g;w++)F.push(k),S.set(new Uint8Array(I[w].data),k),k+=I[w].data.byteLength;let P=ce.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=yield this.decodePixelBlock(S.buffer,{width:l,height:o,format:P,planes:h?.length||p,offsets:F,pixelType:f});if(_==null)return null;let{noDataValue:O}=this.rasterInfo;if(O!=null&&P!=="lerc"&&!_.mask&&(O=O[0],O!=null)){let N=_.width*_.height,J=new Uint8Array(N);if(Math.abs(O)>1e24)for(w=0;w<N;w++)Math.abs((_.pixels[0][w]-O)/O)>1e-6&&(J[w]=1);else for(w=0;w<N;w++)_.pixels[0][w]!==O&&(J[w]=1);_.mask=J}let M=0,D=0;if(d!==l||y!==o){let N=_.mask;if(N)for(w=0;w<o;w++)if(D=w*l,w<y)for(M=d;M<l;M++)N[D+M]=0;else for(M=0;M<l;M++)N[D+M]=0;else for(N=new Uint8Array(l*o),_.mask=N,w=0;w<y;w++)for(D=w*l,M=0;M<d;M++)N[D+M]=1}return _})}_getBandSegmentCount(){return ce.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){let{blockWidth:i,blockHeight:s,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:n,height:l}=this.rasterInfo,o=this._getBandSegmentCount(),c,m,p,f=0,u=0;for(p=0;p<t;p++)u=a**p,c=Math.ceil(n/i/u),m=Math.ceil(l/s/u),f+=c*m;u=a**t,c=Math.ceil(n/i/u),m=Math.ceil(l/s/u),f+=e*c+r,f*=4*o;let d=this._storageIndex.subarray(f,f+4*o),y=0,h=0,g=[];for(let x=0;x<o;x++)y=d[4*x]*2**32+d[4*x+1],h=y+d[4*x+2]*2**32+d[4*x+3],g.push({from:y,to:h});return{ranges:g,actualTileWidth:r<c-1?i:Math.ceil(n/u)-i*(c-1),actualTileHeight:e<m-1?s:Math.ceil(l/u)-s*(m-1)}}_parseHeader(t){let e=Q(t,"MRF_META/Raster");if(!e)throw new C("mrf:open","not a valid MRF format");let r=Q(e,"Size"),i=parseInt(r.getAttribute("x"),10),s=parseInt(r.getAttribute("y"),10),a=parseInt(r.getAttribute("c"),10),n=(ee(e,"Compression")||"none").toLowerCase();if(!ce.has(n))throw new C("mrf:open","currently does not support compression "+n);let l=ee(e,"DataType")||"UInt8",o=re.get(l);if(o==null)throw new C("mrf:open","currently does not support pixel type "+l);let c=Q(e,"PageSize"),m=parseInt(c.getAttribute("x"),10),p=parseInt(c.getAttribute("y"),10),f=Q(e,"DataValues"),u,d;if(f&&(d=f.getAttribute("NoData"),d!=null&&(u=d.trim().split(" ").map(O=>parseFloat(O)))),Q(t,"MRF_META/CachedSource"))throw new C("mrf:open","currently does not support MRF referencing other data files");let y=Q(t,"MRF_META/GeoTags"),h=Q(y,"BoundingBox"),g,x=!1;if(h!=null){let O=parseFloat(h.getAttribute("minx")),M=parseFloat(h.getAttribute("miny")),D=parseFloat(h.getAttribute("maxx")),N=parseFloat(h.getAttribute("maxy")),J=ee(y,"Projection")||"",V=A.WGS84;if(J!=="LOCAL_CS[]")if(J.toLowerCase().startsWith("epsg:")){let z=Number(J.slice(5));isNaN(z)||z===0||(V=new A({wkid:z}))}else V=Te(J)??A.WGS84;else x=!0,V=new A({wkid:3857});g=new L(O,M,D,N),g.spatialReference=V}else x=!0,g=new L({xmin:-.5,ymin:.5-s,xmax:i-.5,ymax:.5,spatialReference:new A({wkid:3857})});let w=Q(t,"MRF_META/Rsets"),I=parseInt(w?.getAttribute("scale")||"2",10),T=g.spatialReference,S=new ae({origin:new H({x:g.xmin,y:g.ymax,spatialReference:T}),blockWidth:m,blockHeight:p,pyramidBlockWidth:m,pyramidBlockHeight:p,compression:n,pyramidScalingFactor:I}),F=new H({x:g.width/i,y:g.height/s,spatialReference:T}),k=new oe({width:i,height:s,extent:g,isPseudoSpatialReference:x,spatialReference:T,bandCount:a,pixelType:o,pixelSize:F,noDataValue:u,storageInfo:S}),P=ee(t,"datafile"),_=ee(t,"IndexFile");return{rasterInfo:k,files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:P||this.url.replace(".mrf",ce.get(n).blobExtension)}}}_fetchAuxiliaryData(t){return v(this,null,function*(){try{let{data:e}=yield this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return _e(e)}catch{return null}})}};function _r(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,i,s,a,n;if(ii){for(r=new Uint8Array(t),s=new ArrayBuffer(t.byteLength),i=new Uint8Array(s),a=0;a<t.byteLength/4;a++)for(n=0;n<4;n++)i[4*a+n]=r[4*a+3-n];e=new Uint32Array(s)}else e=new Uint32Array(t);return e}b([R()],Fe.prototype,"_files",void 0),b([R()],Fe.prototype,"_storageIndex",void 0),b([R({type:String,json:{write:!0}})],Fe.prototype,"datasetFormat",void 0),Fe=b([W("esri.layers.support.rasterDatasets.MRFRaster")],Fe);var rr=Fe;function Fr(t){let e=t.fields,r=t.records,i=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:i,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),a=s.map(c=>c.name),n=[],l=0,o=0;return r.forEach(c=>{let m={};for(m[i]=l++,o=1;o<a.length;o++)m[a[o]]=c[o-1];n.push({attributes:m})}),{displayFieldName:"",fields:s,features:n}}var it=class{static get supportedVersions(){return[5]}static parse(e){let r=new DataView(e),i=3&r.getUint8(0);if(i!==3)return{header:{version:i},recordSet:null};let s=r.getUint32(4,!0),a=r.getUint16(8,!0),n=r.getUint16(10,!0),l={version:i,recordCount:s,headerByteCount:a,recordByteCount:n},o=32,c=[],m=[],p;if(i===3){for(;r.getUint8(o)!==13;)p=String.fromCharCode(r.getUint8(o+11)).trim(),c.push({name:st(new Uint8Array(e,o,11)),type:p,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(p)],length:r.getUint8(o+16)}),o+=32;if(o+=1,c.length>0)for(;m.length<s&&e.byteLength-o>n;){let f=[];r.getUint8(o)===32?(o+=1,c.forEach(u=>{if(u.type==="C")f.push(st(new Uint8Array(e,o,u.length)).trim());else if(u.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,u.length)).trim(),10));else if(u.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,u.length)).trim()));else if(u.type==="D"){let d=String.fromCharCode.apply(null,new Uint8Array(e,o,u.length)).trim();f.push(new Date(parseInt(d.substring(0,4),10),parseInt(d.substring(4,6),10)-1,parseInt(d.substring(6,8),10)))}o+=u.length}),m.push(f)):o+=n}}return{header:l,fields:c,records:m,recordSet:Fr({fields:c,records:m})}}};var It=(t,e)=>t.get(e)?.values,ze=(t,e)=>t.get(e)?.values?.[0],de=class extends K{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}open(t){return v(this,null,function*(){yield this.init();let e=t?t.signal:null,{data:r}=yield this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!r)throw new C("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));let{littleEndian:i,firstIFDPos:s,isBigTiff:a}=li(r),n=[];yield this._readIFDs(n,r,i,s,0,a?8:4,e);let{imageInfo:l,rasterInfo:o}=Mr(n),c=ai(n),m=oi(n);if(this._headerInfo=E({littleEndian:i,isBigTiff:a,ifds:n,pyramidIFDs:c,maskIFDs:m},l),this._set("rasterInfo",o),!l.isSupported)throw new C("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new C("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");o.isPseudoSpatialReference&&te.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");let p=n[0].get("PREDICTOR")?.values?.[0];if(n[0].get("SAMPLEFORMAT")?.values?.[0]===3&&p===2)throw new C("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");let{skipMapInfo:u,skipExtensions:d=[]}=this.ioConfig;if(!d.includes("aux.xml")&&!u){let y=yield this._fetchAuxiliaryMetaData(t);y!=null&&kr(y,o)}d.includes("vat.dbf")||o.bandCount!==1||o.pixelType!=="u8"||u||(o.attributeTable=yield this._fetchAuxiliaryTable(t),o.attributeTable!=null&&(o.keyProperties.DataType="thematic")),u&&this.updateImageSpaceRasterInfo(o),this.updateTileInfo()})}fetchRawTile(s,a,n){return v(this,arguments,function*(t,e,r,i={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(t,e,r))return null;let l=yield this._fetchRawTiffTile(t,e,r,!1,i);if(l!=null&&this._headerInfo.hasMaskBand){let o=yield this._fetchRawTiffTile(t,e,r,!0,i);o!=null&&o.pixels[0]instanceof Uint8Array&&(l.mask=o.pixels[0])}return l})}_readIFDs(t,e,r,i,s,a=4,n){return v(this,null,function*(){if(!i)return null;(i>=e.byteLength||i<0)&&(e=(yield this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:n})).data,s=i+s,i=0);let l=yield this._readIFD(e,r,i,s,Pe.tiffTags,a,n);if(t.push(l.ifd),!l.nextIFD)return null;yield this._readIFDs(t,e,r,l.nextIFD-s,s,a,n)})}_readIFD(l,o,c,m){return v(this,arguments,function*(t,e,r,i,s=Pe.tiffTags,a=4,n){if(!t)return null;let p=ci(t,e,r,i,s,a);if(p.success){let f=[];if(p.ifd?.forEach(u=>{u.values||f.push(u)}),f.length>0){let u=f.map(y=>y.offlineOffsetSize).filter(ke),d=Math.min.apply(null,u.map(y=>y[0]));if(Math.min.apply(null,u.map(y=>y[0]+y[1]))-d<=this._bufferSize){let{data:y}=yield this.request(this.url,{range:{from:d,to:d+this._bufferSize},responseType:"array-buffer",signal:n});t=y,i=d,f.forEach(h=>ri(t,e,h,i))}}if(p.ifd?.has("GEOKEYDIRECTORY")){let u=p.ifd.get("GEOKEYDIRECTORY"),d=u?.values;if(d&&d.length>4){let y=d[0]+"."+d[1]+"."+d[2],h=yield this._readIFD(t,e,u.valueOffset+6-i,i,Pe.geoKeys,2,n);u.data=h.ifd,u.data&&u.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[y]})}}return p}if(p.requiredBufferSize&&p.requiredBufferSize!==t.byteLength)return(t=(yield this.request(this.url,{range:{from:i,to:i+p.requiredBufferSize+4},responseType:"array-buffer",signal:n})).data).byteLength<p.requiredBufferSize?null:this._readIFD(t,e,0,i,Pe.tiffTags,4,n)})}_fetchRawTiffTile(a,n,l,o){return v(this,arguments,function*(t,e,r,i,s={}){let c=this._getTileLocation(t,e,r,i);if(!c)return null;let{ranges:m,actualTileWidth:p,actualTileHeight:f,ifd:u}=c,d=m.map(_=>this.request(this.url,{range:_,responseType:"array-buffer",signal:s.signal})),y=yield Promise.all(d),h=y.map(_=>_.data.byteLength).reduce((_,O)=>_+O),g=y.length===1?y[0].data:new ArrayBuffer(h),x=[0],w=[0];if(y.length>1){let _=new Uint8Array(g);for(let O=0,M=0;O<y.length;O++){let D=y[O].data;_.set(new Uint8Array(D),M),x[O]=M,M+=D.byteLength,w[O]=D.byteLength}}let{blockWidth:I,blockHeight:T}=this.getBlockWidthHeight(t),S=yield this.decodePixelBlock(g,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:u,offsets:x,sizes:w},width:I,height:T,planes:null,pixelType:null});if(S==null)return null;let F,k,P;if(p!==I||f!==T){let _=S.mask;if(_)for(F=0;F<T;F++)if(P=F*I,F<f)for(k=p;k<I;k++)_[P+k]=0;else for(k=0;k<I;k++)_[P+k]=0;else for(_=new Uint8Array(I*T),S.mask=_,F=0;F<f;F++)for(P=F*I,k=0;k<p;k++)_[P+k]=1}return S})}_getTileLocation(t,e,r,i=!1){let{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,n=t===0?0:t-(s-1),{_headerInfo:l}=this;if(!l)return null;let o=i?l.maskIFDs[n]:n===0?l?.ifds[0]:l?.pyramidIFDs[n-1];if(!o)return null;let c=ni(o,l),m=It(o,"TILEOFFSETS");if(m===void 0)return null;let p=It(o,"TILEBYTECOUNTS"),{minRow:f,minCol:u,maxRow:d,maxCol:y}=a[n];if(e>d||r>y||e<f||r<u)return null;let h=ze(o,"IMAGEWIDTH"),g=ze(o,"IMAGELENGTH"),x=ze(o,"TILEWIDTH"),w=ze(o,"TILELENGTH"),I=[];if(c){let{bandCount:T}=this.rasterInfo;for(let S=0;S<T;S++){let F=S*(d+1)*(y+1)+e*(y+1)+r;I[S]={from:m[F],to:m[F]+p[F]-1}}}else{let T=e*(y+1)+r;I.push({from:m[T],to:m[T]+p[T]-1})}for(let T=0;T<I.length;T++)if(I[T].from==null||!I[T].to||I[T].to<0)return null;return{ranges:I,ifd:o,actualTileWidth:r===y&&h%x||x,actualTileHeight:e===d&&g%w||w}}_fetchAuxiliaryMetaData(t){return v(this,null,function*(){try{let{data:e}=yield this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return _e(e)}catch{return null}})}_fetchAuxiliaryTable(t){return v(this,null,function*(){try{let{data:e}=yield this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:t?.signal}),r=it.parse(e);return r?.recordSet?ge.fromJSON(r.recordSet):null}catch{return null}})}};function Mr(t){let e=si(t),{width:r,height:i,tileWidth:s,tileHeight:a,planes:n,pixelType:l,compression:o,firstPyramidLevel:c,maximumPyramidLevel:m,pyramidBlockWidth:p,pyramidBlockHeight:f,pyramidResolutions:u,tileBoundary:d,affine:y,metadata:h}=e,g=e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid,x=Te(g),w=!!e.isPseudoGeographic;x==null&&(w=!0,x=new A({wkid:3857}));let I=new L(B(E({},e.extent),{spatialReference:x})),T=new H(I?{x:I.xmin,y:I.ymax,spatialReference:x}:{x:0,y:0}),S=new ae({blockWidth:s,blockHeight:a,pyramidBlockWidth:p,pyramidBlockHeight:f,compression:o,origin:T,firstPyramidLevel:c,maximumPyramidLevel:m,pyramidResolutions:u,blockBoundary:d}),F=new H({x:(I.xmax-I.xmin)/r,y:(I.ymax-I.ymin)/i,spatialReference:x}),k=h?{BandProperties:h.bandProperties,DataType:h.dataType}:{},P=null,_=ze(t[0],"PHOTOMETRICINTERPRETATION"),O=It(t[0],"COLORMAP");if(_<=3&&O?.length>3&&O.length%3==0){P=[];let D=O.length/3;for(let N=0;N<D;N++)P.push([N,O[N]>>>8,O[N+D]>>>8,O[N+2*D]>>>8])}let M=new oe({width:r,height:i,bandCount:n,pixelType:l,pixelSize:F,storageInfo:S,spatialReference:x,isPseudoSpatialReference:w,keyProperties:k,extent:I,colormap:P,statistics:h?h.statistics:null});if(y?.length&&(M.nativeExtent=new L({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:x}),M.transform=new be({polynomialOrder:1,forwardCoefficients:[y[2]+y[0]/2,y[5]-y[3]/2,y[0],y[3],-y[1],-y[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new H({x:(I.xmax-I.xmin)/r,y:(I.ymax-I.ymin)/i,spatialReference:x}),S.origin.x=-.5,S.origin.y=.5),u){let{x:D,y:N}=M.pixelSize;u.forEach(J=>{J.x*=D,J.y*=N})}return{imageInfo:e,rasterInfo:M}}function kr(t,e){if(e.statistics=t.statistics??e.statistics,e.histograms=t.histograms,t.histograms&&e.statistics==null&&(e.statistics=we(t.histograms)),t.transform&&e.transform==null){e.transform=t.transform,e.nativeExtent=e.extent;let r=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new H({x:(r.xmax-r.xmin)/e.width,y:(r.ymax-r.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=r}e.isPseudoSpatialReference&&t.spatialReference&&(e.spatialReference=t.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}b([R()],de.prototype,"_files",void 0),b([R()],de.prototype,"_headerInfo",void 0),b([R()],de.prototype,"_bufferSize",void 0),b([R({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),de=b([W("esri.layers.support.rasterDatasets.TIFFRaster")],de);var sr=de;var $=new Map;$.set("MRF",{desc:"Meta Raster Format",constructor:rr}),$.set("TIFF",{desc:"GeoTIFF",constructor:sr}),$.set("RasterTileServer",{desc:"Raster Tile Server",constructor:ir}),$.set("JPG",{desc:"JPG Raster Format",constructor:Le}),$.set("PNG",{desc:"PNG Raster Format",constructor:Le}),$.set("GIF",{desc:"GIF Raster Format",constructor:Le}),$.set("BMP",{desc:"BMP Raster Format",constructor:Le}),$.set("CovJSON",{desc:"COVJSON Raster Format",constructor:er}),$.set("MEMORY",{desc:"In Memory Raster Format",constructor:ve});var Me=class{static get supportedFormats(){let e=new Set;return $.forEach((r,i)=>e.add(i)),e}static open(e){return v(this,null,function*(){let{url:r,ioConfig:i,source:s,sourceJSON:a}=e,n=e.datasetFormat??i?.datasetFormat;n==null&&(r.includes(".")?n=r.slice(r.lastIndexOf(".")+1).toUpperCase():s?.type?.toLowerCase()==="coverage"?n="CovJSON":s?.extent&&s.pixelblocks&&(n="MEMORY")),n==="OVR"||n==="TIF"?n="TIFF":n==="JPG"||n==="JPEG"||n==="JFIF"?n="JPG":n==="COVJSON"&&(n="CovJSON"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");let l={url:r,source:s,sourceJSON:a,datasetFormat:n,ioConfig:i??{bandIds:null,sampling:null}};if(Object.keys(l).forEach(p=>{l[p]==null&&delete l[p]}),n){if(!this.supportedFormats.has(n))throw new C("rasterfactory:open","not a supported format "+n);if(n==="CRF")throw new C("rasterfactory:open",`cannot open raster: ${r}`);let p=new($.get(n)).constructor(l);return yield p.open({signal:e.signal}),p}let o=Array.from($.keys()).filter(p=>p!=="CovJSON"&&p!=="Memory"),c=0,m=()=>{if(n=o[c++],!n||n==="CRF")return null;let p=new($.get(n)).constructor(l);return p.open({signal:e.signal}).then(()=>p).catch(()=>m())};return m()})}static register(e,r,i){$.has(e.toUpperCase())||$.set(e.toUpperCase(),{desc:r,constructor:i})}};var G=class extends Ht(Wt(ki(Kt(Xt(Qi(Qt(Yt(zt(At(Vt(Yi))))))))))){constructor(...t){super(...t),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=Mt((e,r,i)=>v(this,null,function*(){let{save:s,saveAs:a}=yield import("./chunk-KREGRPA5.js");switch(e){case Ce.SAVE:return s(this,r);case Ce.SAVE_AS:return a(this,i,r)}}))}normalizeCtorArgs(t,e){return typeof t=="string"?E({url:t},e):t}load(t){let e=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(_t).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let t=[new pe({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new pe({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],e=this.raster?.rasterInfo??this.serviceRasterInfo,r=e?.attributeTable,i=r!=null?r.fields:null,s="Raster.";if(i){let l=i.filter(o=>o.type!=="oid"&&o.name.toLowerCase()!=="value").map(o=>{let c=o.clone();return c.name=s+o.name,c});t.push(...l)}let a=e?.dataType,n=e?.multidimensionalInfo;if((a==="vector-magdir"||a==="vector-uv")&&n!=null){let l=n.variables[0].unit?.trim(),o="Magnitude"+(l?` (${l})`:"");t.push(new pe({name:"Raster.Magnitude",alias:o,domain:null,editable:!1,type:"double"})),t.push(new pe({name:"Raster.Direction",alias:"Direction (\xB0)",domain:null,editable:!1,type:"double"}))}return t}createPopupTemplate(t){let{rasterFields:e}=this,r=new Set(e.map(({name:i})=>i).filter(i=>i.toLowerCase()!=="raster.servicepixelvalue.raw"));return Zt({fields:e,title:this.title},B(E({},t),{visibleFieldNames:r}))}generateRasterInfo(t,e){return v(this,null,function*(){if(t=ye(Ee,t),yield this.load(),!t||t.functionName?.toLowerCase()==="none")return this.serviceRasterInfo;try{let{rasterInfo:r}=yield this._openFunctionRaster(t,e);return r}catch(r){throw r instanceof C?r:new C("imagery-tile-layer","the given raster function is not supported")}})}save(t){return v(this,null,function*(){return this._debouncedSaveOperations(Ce.SAVE,t)})}saveAs(t,e){return v(this,null,function*(){return this._debouncedSaveOperations(Ce.SAVE_AS,e,t)})}write(t,e){let r=this._primaryRasters[0]??this.raster;if(this.loaded?r.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e?.messages){let i=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new C("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${i}'`,{layer:this}))}return null}_openRaster(t){return v(this,null,function*(){let e=!1;if(this.raster)yield this._openFromRaster(this.raster,t),e=this.raster.datasetFormat==="Function";else{let{url:i,rasterFunction:s,source:a}=this;if(!i&&!a)throw new C("imagery-tile-layer:open","missing url or source parameter");a?yield this._openFromSource(a,t):s?yield this._openFromUrlWithRasterFunction(i,s,t):yield this._openFromUrl(i,t)}let r=this.raster.rasterInfo;if(!r)throw new C("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",e?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){let i=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:B(E({},this.sourceJSON),{minScale:0,maxScale:0});this.read(i,{origin:"service"})}else this.read({tileInfo:this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Dt(()=>this.customParameters,i=>{this.raster&&(this.raster.ioConfig.customFetchParameters=i)}))})}_openFromRaster(t,e){return v(this,null,function*(){t.rasterInfo||(yield t.open({signal:e})),this._primaryRasters=t.datasetFormat==="Function"?t.primaryRasters.rasters:[t],this.url||(this.url=this._primaryRasters[0].url)})}_openFromUrlWithRasterFunction(t,e,r){return v(this,null,function*(){let i=[t];e&&gi(e.toJSON(),i);let s=yield Promise.all(i.map(n=>Me.open({url:n,sourceJSON:this.sourceJSON,ioConfig:B(E({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:r}))),a=s.findIndex(n=>n==null);if(a>-1)throw new C("imagery-tile-layer:open",`cannot open raster: ${i[a]}`);return this._primaryRasters=s,this._initializeWithFunctionRaster(e)})}_openFromUrl(t,e){return v(this,null,function*(){let r=yield Me.open({url:t,sourceJSON:this.sourceJSON,ioConfig:B(E({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:e});if(r==null)throw new C("imagery-tile-layer:open",`cannot open raster: ${t}`);this._primaryRasters=[r],this.raster=r})}_openFromSource(t,e){return v(this,null,function*(){let r="the tiled imagery data source is not supported",i=t.type?.toLowerCase()==="coverage"?"CovJSON":t.extent&&t.pixelBlock?"MEMORY":null;if(!i)throw new C("imagery-tile-layer:open",r);i==="MEMORY"&&(t={extent:t.extent,pixelBlocks:[t.pixelBlock]});let s=yield Me.open({url:"",source:t,datasetFormat:i,ioConfig:B(E({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:e});if(s==null)throw new C("imagery-tile-layer:open",r);this._primaryRasters=[s],this.rasterFunction?yield this._initializeWithFunctionRaster(this.rasterFunction):this.raster=s})}_openFunctionRaster(t,e){return v(this,null,function*(){let r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(a=>r[a.url]=a);let i=$e(t.functionDefinition?.toJSON()??t.toJSON(),r),s=new Ze({rasterFunction:i});return yield s.open(e),s})}_initializeWithFunctionRaster(t,e){return v(this,null,function*(){try{this.raster=yield this._openFunctionRaster(t,e)}catch(r){r instanceof C&&te.getLogger(this).error("imagery-tile-layer:open",r.message),te.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}})}};b([R({clonable:!1})],G.prototype,"_primaryRasters",void 0),b([R({type:[kt],json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.bandIds?.join(",")!=="0,1,2"}}}}})],G.prototype,"bandIds",void 0),b([R({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),jt(Ni)],G.prototype,"interpolation",void 0),b([R(Mi)],G.prototype,"legendEnabled",void 0),b([R({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],G.prototype,"isReference",void 0),b([R({type:["show","hide"]})],G.prototype,"listMode",void 0),b([R({json:{read:!0,write:!0}})],G.prototype,"blendMode",void 0),b([R()],G.prototype,"sourceJSON",void 0),b([R({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],G.prototype,"version",void 0),b([R({readOnly:!0,json:{read:!1}})],G.prototype,"type",void 0),b([R({type:["ArcGISTiledImageServiceLayer"]})],G.prototype,"operationalLayerType",void 0),b([R({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,r){e[r]=!t}}}})],G.prototype,"popupEnabled",void 0),b([R({type:$t,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],G.prototype,"popupTemplate",void 0),b([R({readOnly:!0})],G.prototype,"defaultPopupTemplate",null),b([R({readOnly:!0,type:[pe]})],G.prototype,"fields",void 0),b([R({readOnly:!0,type:[pe]})],G.prototype,"rasterFields",null),b([R({constructOnly:!0})],G.prototype,"source",void 0),G=b([W("esri.layers.ImageryTileLayer")],G);var Al=G;export{Al as default};
