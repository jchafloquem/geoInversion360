import{a as A}from"./chunk-MAPO7YGF.js";import{n as g}from"./chunk-OLIJD5I4.js";import{u as N}from"./chunk-ESBNO4XM.js";import{a as T}from"./chunk-IEUNGS56.js";import{a as J}from"./chunk-TTN7UOJS.js";import{o as Z,p as U}from"./chunk-4HUAEW4D.js";import{a as l,l as F}from"./chunk-SO6OJFOM.js";import{a as I}from"./chunk-DG5QI6E2.js";import{b as o}from"./chunk-MT7BXRRQ.js";import{I as r,T as y}from"./chunk-Z5NXR7SL.js";import{S as c}from"./chunk-7JLWSSXP.js";import{a as t}from"./chunk-W3WDPWBE.js";import{a as Q,b as X}from"./chunk-JEGVIFEP.js";var $={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},ee=o()($),pe=o()(X(Q({},$),{esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"})),ue=o()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),me=o()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),de=o()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),ce=o()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),ye=o()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),be=o()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),Te=o()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),te=o()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),he=o()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),fe=o()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),re=o()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),m=o()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),E=o()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),j=o()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),P=o()({1:"right",2:"left"},{useNumericKeys:!0}),b=o()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),k=o()({0:"permit",1:"restrict"},{useNumericKeys:!0}),B=o()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),R=o()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),ve=o()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),ie=o()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),se=o()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),M=o()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),V=o()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),Se=o()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),ge=o()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),Ne=o()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),Ae=o()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"});var q,h=q=class extends T(y){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(e){return new q({directionLineType:R.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:e.attributes.FromLevel??null,geometry:e.geometry,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:e.attributes.ToLevel??null})}toGraphic(){let e={ObjectID:this.objectId,DirectionLineType:this.directionLineType!=null?R.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return this.fromLevel!=null&&(e.FromLevel=this.fromLevel),this.toLevel!=null&&(e.ToLevel=this.toLevel),new A({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};h.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger"},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger"},{name:"FromLevel",alias:"From Level",type:"esriFieldTypeInteger"},{name:"Meters",alias:"Meters",type:"esriFieldTypeDouble"},{name:"Minutes",alias:"Minutes",type:"esriFieldTypeDouble"},{name:"ToLevel",alias:"To Level",type:"esriFieldTypeInteger"}],t([r({type:R.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:R.read}}})],h.prototype,"directionLineType",void 0),t([r({json:{read:{source:"attributes.DirectionPointID"}}})],h.prototype,"directionPointId",void 0),t([r({json:{read:{source:"attributes.Meters"}}})],h.prototype,"distance",void 0),t([r({json:{read:{source:"attributes.Minutes"}}})],h.prototype,"duration",void 0),t([r({json:{read:{source:"attributes.FromLevel"}}})],h.prototype,"fromLevel",void 0),t([r({type:U})],h.prototype,"geometry",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],h.prototype,"objectId",void 0),t([r({type:g})],h.prototype,"popupTemplate",void 0),t([r({types:N})],h.prototype,"symbol",void 0),t([r({json:{read:{source:"attributes.ToLevel"}}})],h.prototype,"toLevel",void 0),t([r({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),h=q=t([c("esri.rest.support.DirectionLine")],h);var Le=h;var _,p=_=class extends T(y){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(e,i){return i.attributes.ArrivalTime!=null?new Date(i.attributes.ArrivalTime):null}static fromGraphic(e){return new _({alternateName:e.attributes.AlternateName??null,arrivalTime:e.attributes.ArrivalTime!=null?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:e.attributes.ArrivalUTCOffset??null,azimuth:e.attributes.Azimuth??null,branchName:e.attributes.BranchName??null,directionPointType:B.fromJSON(e.attributes.DirectionPointType),displayText:e.attributes.DisplayText??null,exitName:e.attributes.ExitName??null,geometry:e.geometry,intersectingName:e.attributes.IntersectingName??null,level:e.attributes.Level??null,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:e.attributes.ShortVoiceInstruction??null,stopId:e.attributes.StopID??null,symbol:e.symbol,towardName:e.attributes.TowardName??null,voiceInstruction:e.attributes.VoiceInstruction??null})}toGraphic(){let e={ObjectID:this.objectId,DirectionPointType:this.directionPointType!=null?B.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return this.alternateName!=null&&(e.AlternateName=this.alternateName),this.arrivalTime!=null&&(e.ArrivalTime=this.arrivalTime.getTime()),this.arrivalTimeOffset!=null&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),this.azimuth!=null&&(e.Azimuth=this.azimuth),this.branchName!=null&&(e.BranchName=this.branchName),this.displayText!=null&&(e.DisplayText=this.displayText),this.exitName!=null&&(e.ExitName=this.exitName),this.intersectingName!=null&&(e.IntersectingName=this.intersectingName),this.level!=null&&(e.Level=this.level),this.name!=null&&(e.Name=this.name),this.shortVoiceInstruction!=null&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),this.towardName!=null&&(e.TowardName=this.towardName),this.voiceInstruction!=null&&(e.VoiceInstruction=this.voiceInstruction),new A({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};p.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AlternateName",alias:"Alternative Name",type:"esriFieldTypeString"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time Offset",type:"esriFieldTypeInteger"},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble"},{name:"BranchName",alias:"Branch Name",type:"esriFieldTypeString"},{name:"DirectionPointType",alias:"Directions Point Type",type:"esriFieldTypeInteger"},{name:"DisplayText",alias:"Display Text",type:"esriFieldTypeString"},{name:"ExitName",alias:"Exit Name",type:"esriFieldTypeString"},{name:"IntersectingName",alias:"Intersecting Name",type:"esriFieldTypeString"},{name:"Level",alias:"Level",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ShortVoiceInstruction",alias:"Short Voice Instruction",type:"esriFieldTypeString"},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger"},{name:"TowardName",alias:"Toward Name",type:"esriFieldTypeString"},{name:"VoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString"}],t([r({json:{read:{source:"attributes.AlternateName"}}})],p.prototype,"alternateName",void 0),t([r()],p.prototype,"arrivalTime",void 0),t([l("arrivalTime",["attributes.ArrivalTime"])],p.prototype,"readArrivalTime",null),t([r({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],p.prototype,"arrivalTimeOffset",void 0),t([r({json:{read:{source:"attributes.Azimuth"}}})],p.prototype,"azimuth",void 0),t([r({json:{read:{source:"attributes.BranchName"}}})],p.prototype,"branchName",void 0),t([r({type:B.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:B.read}}})],p.prototype,"directionPointType",void 0),t([r({json:{read:{source:"attributes.DisplayText"}}})],p.prototype,"displayText",void 0),t([r({json:{read:{source:"attributes.ExitName"}}})],p.prototype,"exitName",void 0),t([r({type:F})],p.prototype,"geometry",void 0),t([r({json:{read:{source:"attributes.IntersectingName"}}})],p.prototype,"intersectingName",void 0),t([r()],p.prototype,"level",void 0),t([r({json:{read:{source:"attributes.Name"}}})],p.prototype,"name",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],p.prototype,"objectId",void 0),t([r({type:g})],p.prototype,"popupTemplate",void 0),t([r({json:{read:{source:"attributes.Sequence"}}})],p.prototype,"sequence",void 0),t([r({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],p.prototype,"shortVoiceInstruction",void 0),t([r({json:{read:{source:"attributes.StopID"}}})],p.prototype,"stopId",void 0),t([r({types:N})],p.prototype,"symbol",void 0),t([r({json:{read:{source:"attributes.TowardName"}}})],p.prototype,"towardName",void 0),t([r({readOnly:!0,json:{read:!1}})],p.prototype,"type",void 0),t([r({json:{read:{source:"attributes.VoiceInstruction"}}})],p.prototype,"voiceInstruction",void 0),p=_=t([c("esri.rest.support.DirectionPoint")],p);var rt=p;function f(e,i){if(e==null)return null;let n={},S=new RegExp(`^${i}`,"i");for(let L of Object.keys(e))if(S.test(L)){let ne=L.substring(i.length);n[M.fromJSON(ne)]=e[L]}return n}function W(e,i,n){if(e!=null){i.attributes||(i.attributes={});for(let S in e){let L=M.toJSON(S);i.attributes[`${n}${L}`]=e[S]}}}function C(e){let i={};for(let n of Object.keys(e)){let S=n;i[M.fromJSON(S)]=e[n]}return i}function w(e){let i={};for(let n of Object.keys(e)){let S=n;i[M.toJSON(S)]=e[n]}return i}function x(e,i){return e==null||i==null?null:Math.round((e-i)/6e4)}function ot(e){let i=e.toJSON(),n=i;return n.accumulateAttributeNames&&=i.accumulateAttributeNames?.join(),n.attributeParameterValues&&=JSON.stringify(i.attributeParameterValues),n.barriers&&=JSON.stringify(i.barriers),n.outSR&&=i.outSR?.wkid,n.overrides&&=JSON.stringify(i.overrides),n.polygonBarriers&&=JSON.stringify(i.polygonBarriers),n.polylineBarriers&&=JSON.stringify(i.polylineBarriers),n.restrictionAttributeNames&&=i.restrictionAttributeNames?.join(),n.stops&&=JSON.stringify(i.stops),n.travelMode&&=JSON.stringify(i.travelMode),n}var K,u=K=class extends T(y){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,i){return f(i.attributes,"Attr_")}writeCosts(e,i){W(e,i,"Attr_")}static fromGraphic(e){return new K({addedCost:e.attributes.AddedCost??null,barrierType:e.attributes.BarrierType!=null?b.fromJSON(e.attributes.BarrierType):null,costs:e.attributes.Costs!=null?C(JSON.parse(e.attributes.Costs)):null,curbApproach:e.attributes.CurbApproach!=null?m.fromJSON(e.attributes.CurbApproach):null,fullEdge:e.attributes.FullEdge!=null?k.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:e.attributes.Status!=null?j.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){let e={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:this.barrierType!=null?b.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(w(this.costs)):null,CurbApproach:this.curbApproach!=null?m.toJSON(this.curbApproach):null,FullEdge:this.fullEdge!=null?k.toJSON(this.fullEdge):null,Name:this.name,Status:this.status!=null?j.toJSON(this.status):null};return new A({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};u.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"}],t([r()],u.prototype,"addedCost",void 0),t([r({type:b.apiValues,json:{name:"attributes.BarrierType",read:{reader:b.read},write:{writer:b.write}}})],u.prototype,"barrierType",void 0),t([r()],u.prototype,"costs",void 0),t([l("costs",["attributes"])],u.prototype,"readCosts",null),t([I("costs")],u.prototype,"writeCosts",null),t([r({constructOnly:!0,type:m.apiValues,json:{read:{source:"attributes.CurbApproach",reader:m.read}}})],u.prototype,"curbApproach",void 0),t([r({type:k.apiValues,json:{name:"attributes.FullEdge",read:{reader:k.read},write:{writer:k.write}}})],u.prototype,"fullEdge",void 0),t([r({type:F,json:{write:!0}})],u.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name"}})],u.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID"}})],u.prototype,"objectId",void 0),t([r({type:g})],u.prototype,"popupTemplate",void 0),t([r({type:P.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:P.read}}})],u.prototype,"sideOfEdge",void 0),t([r({json:{read:{source:"attributes.SourceID"}}})],u.prototype,"sourceId",void 0),t([r({json:{read:{source:"attributes.SourceOID"}}})],u.prototype,"sourceOid",void 0),t([r({type:j.apiValues,json:{read:{source:"attributes.Status",reader:j.read}}})],u.prototype,"status",void 0),t([r({types:N})],u.prototype,"symbol",void 0),t([r({readOnly:!0,json:{read:!1}})],u.prototype,"type",void 0),u=K=t([c("esri.rest.support.PointBarrier")],u);var Ot=u;var G,v=G=class extends T(y){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(e,i){return f(i.attributes,"Attr_")}writeCosts(e,i){W(e,i,"Attr_")}static fromGraphic(e){return new G({barrierType:e.attributes.BarrierType!=null?b.fromJSON(e.attributes.BarrierType):null,costs:e.attributes.Costs!=null?C(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){let e={ObjectID:this.objectId,BarrierType:this.barrierType!=null?b.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(w(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new A({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};v.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],t([r({type:b.apiValues,json:{name:"attributes.BarrierType",read:{reader:b.read},write:{writer:b.write}}})],v.prototype,"barrierType",void 0),t([r()],v.prototype,"costs",void 0),t([l("costs",["attributes"])],v.prototype,"readCosts",null),t([I("costs")],v.prototype,"writeCosts",null),t([r({type:Z,json:{write:!0}})],v.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name"}})],v.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID"}})],v.prototype,"objectId",void 0),t([r({type:g})],v.prototype,"popupTemplate",void 0),t([r()],v.prototype,"scaleFactor",void 0),t([r({types:N})],v.prototype,"symbol",void 0),t([r({readOnly:!0,json:{read:!1}})],v.prototype,"type",void 0),v=G=t([c("esri.rest.support.PolygonBarrier")],v);var qt=v;var z,O=z=class extends T(y){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(e,i){return f(i.attributes,"Attr_")}static fromGraphic(e){return new z({barrierType:e.attributes.BarrierType!=null?b.fromJSON(e.attributes.BarrierType):null,costs:e.attributes.Costs!=null?C(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){let e={ObjectID:this.objectId,BarrierType:this.barrierType!=null?b.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(w(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new A({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};O.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],t([r({type:b.apiValues,json:{read:{source:"attributes.BarrierType",reader:b.read}}})],O.prototype,"barrierType",void 0),t([r()],O.prototype,"costs",void 0),t([l("costs",["attributes"])],O.prototype,"readCosts",null),t([r({type:U,json:{write:!0}})],O.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name"}})],O.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID"}})],O.prototype,"objectId",void 0),t([r({type:g})],O.prototype,"popupTemplate",void 0),t([r()],O.prototype,"scaleFactor",void 0),t([r({types:N})],O.prototype,"symbol",void 0),t([r({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),O=z=t([c("esri.rest.support.PolylineBarrier")],O);var nr=O;var d=class extends T(y){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(e,i){return i.id??i.itemId??null}readRestrictionAttributes(e,i){let{restrictionAttributeNames:n}=i;return n==null?null:n.map(S=>V.fromJSON(S))}writeRestrictionAttributes(e,i,n){e!=null&&(i[n]=e.map(S=>V.toJSON(S)))}};t([r({type:[Object],json:{write:!0}})],d.prototype,"attributeParameterValues",void 0),t([r({type:String,json:{write:!0}})],d.prototype,"description",void 0),t([J(ie,{ignoreUnknown:!1})],d.prototype,"distanceAttributeName",void 0),t([r({type:String,json:{write:!0}})],d.prototype,"id",void 0),t([l("id",["id","itemId"])],d.prototype,"readId",null),t([J(M,{ignoreUnknown:!1})],d.prototype,"impedanceAttributeName",void 0),t([r({type:String,json:{write:!0}})],d.prototype,"name",void 0),t([r({type:[String],json:{write:!0}})],d.prototype,"restrictionAttributeNames",void 0),t([l("restrictionAttributeNames")],d.prototype,"readRestrictionAttributes",null),t([I("restrictionAttributeNames")],d.prototype,"writeRestrictionAttributes",null),t([r({type:Number,json:{write:{allowNull:!0}}})],d.prototype,"simplificationTolerance",void 0),t([J(ee)],d.prototype,"simplificationToleranceUnits",void 0),t([J(se,{ignoreUnknown:!1})],d.prototype,"timeAttributeName",void 0),t([J(re)],d.prototype,"type",void 0),t([r({type:Boolean,json:{write:!0}})],d.prototype,"useHierarchy",void 0),t([J(te)],d.prototype,"uturnAtJunctions",void 0),d=t([c("esri.rest.support.TravelMode")],d);var ae=d;var D=class extends y{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return e==null?null:e.map(i=>M.fromJSON(i))}writeAccumulateAttributes(e,i,n){e?.length&&(i[n]=e.map(S=>M.toJSON(S)))}};t([r({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],D.prototype,"accumulateAttributes",void 0),t([l("accumulateAttributes")],D.prototype,"readAccumulateAttributes",null),t([I("accumulateAttributes")],D.prototype,"writeAccumulateAttributes",null),t([r({type:String,json:{write:!0}})],D.prototype,"directionsLanguage",void 0),t([r({type:Boolean,json:{write:!0}})],D.prototype,"findBestSequence",void 0),t([r({type:Boolean,json:{write:!0}})],D.prototype,"preserveFirstStop",void 0),t([r({type:Boolean,json:{write:!0}})],D.prototype,"preserveLastStop",void 0),t([r({type:Boolean,json:{write:!0}})],D.prototype,"startTimeIsUTC",void 0),t([r({type:Boolean,json:{write:!0}})],D.prototype,"timeWindowsAreUTC",void 0),t([r({type:ae,json:{write:!0}})],D.prototype,"travelMode",void 0),D=t([c("esri.rest.support.RouteSettings")],D);var oe=D;var H,a=H=class extends T(y){constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(e,i){return i.attributes.EndTimeUTC!=null?new Date(i.attributes.EndTimeUTC):null}readEndTimeOffset(e,i){return x(i.attributes.EndTime,i.attributes.EndTimeUTC)}readStartTime(e,i){return i.attributes.StartTimeUTC!=null?new Date(i.attributes.StartTimeUTC):null}readStartTimeOffset(e,i){return x(i.attributes.StartTime,i.attributes.StartTimeUTC)}readTotalCosts(e,i){return f(i.attributes,"Total_")}readTotalViolations(e,i){return f(i.attributes,"TotalViolation_")}readTotalWait(e,i){return f(i.attributes,"TotalWait_")}static fromGraphic(e){return new H({analysisSettings:e.attributes.AnalysisSettings!=null?oe.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:e.attributes.EndTime!=null?new Date(e.attributes.EndTime):null,endTimeOffset:e.attributes.EndUTCOffset??null,geometry:e.geometry,messages:e.attributes.Messages!=null?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:e.attributes.StartTime!=null?new Date(e.attributes.StartTime):null,startTimeOffset:e.attributes.StartUTCOffset??null,symbol:e.symbol,totalCosts:e.attributes.TotalCosts!=null?C(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:e.attributes.TotalMeters??null,totalDuration:e.attributes.TotalMinutes??null,totalLateDuration:e.attributes.TotalLateMinutes??null,totalWaitDuration:e.attributes.TotalWaitMinutes??null,version:e.attributes.Version})}toGraphic(){let e={ObjectID:this.objectId,AnalysisSettings:this.analysisSettings!=null?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:this.endTime!=null?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:this.messages!=null?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:this.startTime!=null?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:this.totalCosts!=null?JSON.stringify(w(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new A({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};a.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString"},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate"},{name:"EndUTCOffset",alias:"End Time Offset",type:"esriFieldTypeInteger"},{name:"Messages",alias:"Messages",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate"},{name:"StartUTCOffset",alias:"Start Time Offset",type:"esriFieldTypeInteger"},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString"},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble"},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble"},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble"},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble"},{name:"Version",alias:"Version",type:"esriFieldTypeString"}],t([r()],a.prototype,"analysisSettings",void 0),t([r()],a.prototype,"endTime",void 0),t([l("endTime",["attributes.EndTimeUTC"])],a.prototype,"readEndTime",null),t([r()],a.prototype,"endTimeOffset",void 0),t([l("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],a.prototype,"readEndTimeOffset",null),t([r({json:{read:{source:"attributes.FirstStopID"}}})],a.prototype,"firstStopId",void 0),t([r({type:U})],a.prototype,"geometry",void 0),t([r({json:{read:{source:"attributes.LastStopID"}}})],a.prototype,"lastStopId",void 0),t([r()],a.prototype,"messages",void 0),t([r({json:{read:{source:"attributes.Name"}}})],a.prototype,"name",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],a.prototype,"objectId",void 0),t([r({type:g})],a.prototype,"popupTemplate",void 0),t([r()],a.prototype,"startTime",void 0),t([l("startTime",["attributes.StartTimeUTC"])],a.prototype,"readStartTime",null),t([r()],a.prototype,"startTimeOffset",void 0),t([l("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],a.prototype,"readStartTimeOffset",null),t([r({json:{read:{source:"attributes.StopCount"}}})],a.prototype,"stopCount",void 0),t([r({types:N})],a.prototype,"symbol",void 0),t([r()],a.prototype,"totalCosts",void 0),t([l("totalCosts",["attributes"])],a.prototype,"readTotalCosts",null),t([r()],a.prototype,"totalDistance",void 0),t([r()],a.prototype,"totalDuration",void 0),t([r()],a.prototype,"totalLateDuration",void 0),t([r()],a.prototype,"totalViolations",void 0),t([l("totalViolations",["attributes"])],a.prototype,"readTotalViolations",null),t([r()],a.prototype,"totalWait",void 0),t([l("totalWait",["attributes"])],a.prototype,"readTotalWait",null),t([r()],a.prototype,"totalWaitDuration",void 0),t([r({readOnly:!0,json:{read:!1}})],a.prototype,"type",void 0),t([r()],a.prototype,"version",void 0),a=H=t([c("esri.rest.support.RouteInfo")],a);var Zr=a;var Y,s=Y=class extends T(y){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,i){return x(i.attributes.ArriveTime,i.attributes.ArriveTimeUTC)}readCumulativeCosts(e,i){return f(i.attributes,"Cumul_")}readDepartTimeOffset(e,i){return x(i.attributes.DepartTime,i.attributes.DepartTimeUTC)}readServiceCosts(e,i){return f(i.attributes,"Attr_")}writeServiceCosts(e,i){W(e,i,"Attr_")}writeTimeWindowEnd(e,i){e!=null&&(i.attributes||(i.attributes={}),i.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,i){e!=null&&(i.attributes||(i.attributes={}),i.attributes.TimeWindowStart=e.getTime())}readViolations(e,i){return f(i.attributes,"Violation_")}readWait(e,i){return f(i.attributes,"Wait_")}static fromGraphic(e){return new Y({arriveCurbApproach:e.attributes.ArrivalCurbApproach!=null?m.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:e.attributes.ArrivalTime!=null?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:e.attributes.CumulativeCosts!=null?C(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:e.attributes.CumulativeMeters??null,cumulativeDuration:e.attributes.CumulativeMinutes??null,curbApproach:e.attributes.CurbApproach!=null?m.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:e.attributes.DepartureCurbApproach!=null?m.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:e.attributes.DepartureTime!=null?new Date(e.attributes.DepartureTime):null,departTimeOffset:e.attributes.DepartureUTCOffset??null,geometry:e.geometry,lateDuration:e.attributes.LateMinutes??null,locationType:e.attributes.LocationType!=null?E.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:e.attributes.Sequence??null,serviceCosts:e.attributes.ServiceCosts!=null?C(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:e.attributes.ServiceMeters??null,serviceDuration:e.attributes.ServiceMinutes??null,status:e.attributes.Status!=null?j.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:e.attributes.TimeWindowEnd!=null?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:e.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:e.attributes.TimeWindowStart!=null?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:e.attributes.TimeWindowStartUTCOffset??null,waitDuration:e.attributes.WaitMinutes??null})}toGraphic(){let e={ObjectID:this.objectId,ArrivalCurbApproach:this.arriveCurbApproach!=null?m.toJSON(this.arriveCurbApproach):null,ArrivalTime:this.arriveTime!=null?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:this.cumulativeCosts!=null?JSON.stringify(w(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:this.curbApproach!=null?m.toJSON(this.curbApproach):null,DepartureCurbApproach:this.departCurbApproach!=null?m.toJSON(this.departCurbApproach):null,DepartureTime:this.departTime!=null?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:this.locationType!=null?E.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:this.serviceCosts!=null?JSON.stringify(w(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:this.status!=null?j.toJSON(this.status):null,TimeWindowEnd:this.timeWindowEnd!=null?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:this.timeWindowStart!=null?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new A({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};s.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time",type:"esriFieldTypeInteger"},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString"},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble"},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate"},{name:"DepartureUTCOffset",alias:"Departure Time",type:"esriFieldTypeInteger"},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble"},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString"},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble"},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate"},{name:"TimeWindowEndUTCOffset",alias:"Time Window End Offset",type:"esriFieldTypeInteger"},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate"},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start Offset",type:"esriFieldTypeInteger"},{name:"WaitMinutes",alias:"Minutes Wait",type:"esriFieldTypeDouble"}],t([r({type:m.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:m.read}}})],s.prototype,"arriveCurbApproach",void 0),t([r({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],s.prototype,"arriveTime",void 0),t([r()],s.prototype,"arriveTimeOffset",void 0),t([l("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],s.prototype,"readArriveTimeOffset",null),t([r({json:{name:"attributes.Bearing",read:!1,write:!0}})],s.prototype,"bearing",void 0),t([r({json:{name:"attributes.BearingTol",read:!1,write:!0}})],s.prototype,"bearingTol",void 0),t([r()],s.prototype,"cumulativeCosts",void 0),t([l("cumulativeCosts",["attributes"])],s.prototype,"readCumulativeCosts",null),t([r()],s.prototype,"cumulativeDistance",void 0),t([r()],s.prototype,"cumulativeDuration",void 0),t([r({type:m.apiValues,json:{name:"attributes.CurbApproach",read:{reader:m.read},write:{writer:m.write}}})],s.prototype,"curbApproach",void 0),t([r({type:m.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:m.read}}})],s.prototype,"departCurbApproach",void 0),t([r({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],s.prototype,"departTime",void 0),t([r()],s.prototype,"departTimeOffset",void 0),t([l("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],s.prototype,"readDepartTimeOffset",null),t([r({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],s.prototype,"distanceToNetworkInMeters",void 0),t([r({type:F,json:{write:!0}})],s.prototype,"geometry",void 0),t([r()],s.prototype,"lateDuration",void 0),t([r({type:E.apiValues,json:{name:"attributes.LocationType",read:{reader:E.read},write:{writer:E.write}}})],s.prototype,"locationType",void 0),t([r({json:{name:"attributes.Name"}})],s.prototype,"name",void 0),t([r({json:{name:"attributes.NavLatency",read:!1,write:!0}})],s.prototype,"navLatency",void 0),t([r({json:{name:"attributes.ObjectID"}})],s.prototype,"objectId",void 0),t([r({type:g})],s.prototype,"popupTemplate",void 0),t([r({json:{read:{source:"attributes.PosAlong"}}})],s.prototype,"posAlong",void 0),t([r({json:{name:"attributes.RouteName"}})],s.prototype,"routeName",void 0),t([r()],s.prototype,"serviceCosts",void 0),t([l("serviceCosts",["attributes"])],s.prototype,"readServiceCosts",null),t([I("serviceCosts")],s.prototype,"writeServiceCosts",null),t([r()],s.prototype,"serviceDistance",void 0),t([r()],s.prototype,"serviceDuration",void 0),t([r({json:{name:"attributes.Sequence"}})],s.prototype,"sequence",void 0),t([r({type:P.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:P.read}}})],s.prototype,"sideOfEdge",void 0),t([r({json:{read:{source:"attributes.SnapX"}}})],s.prototype,"snapX",void 0),t([r({json:{read:{source:"attributes.SnapY"}}})],s.prototype,"snapY",void 0),t([r({json:{read:{source:"attributes.SnapZ"}}})],s.prototype,"snapZ",void 0),t([r({json:{read:{source:"attributes.SourceID"}}})],s.prototype,"sourceId",void 0),t([r({json:{read:{source:"attributes.SourceOID"}}})],s.prototype,"sourceOid",void 0),t([r({type:j.apiValues,json:{read:{source:"attributes.Status",reader:j.read}}})],s.prototype,"status",void 0),t([r({types:N})],s.prototype,"symbol",void 0),t([r({type:Date,json:{name:"attributes.TimeWindowEnd"}})],s.prototype,"timeWindowEnd",void 0),t([I("timeWindowEnd")],s.prototype,"writeTimeWindowEnd",null),t([r()],s.prototype,"timeWindowEndOffset",void 0),t([r({type:Date,json:{name:"attributes.TimeWindowStart"}})],s.prototype,"timeWindowStart",void 0),t([I("timeWindowStart")],s.prototype,"writeTimeWindowStart",null),t([r()],s.prototype,"timeWindowStartOffset",void 0),t([r({readOnly:!0,json:{read:!1}})],s.prototype,"type",void 0),t([r()],s.prototype,"violations",void 0),t([l("violations",["attributes"])],s.prototype,"readViolations",null),t([r()],s.prototype,"waitDuration",void 0),t([r()],s.prototype,"wait",void 0),t([l("wait",["attributes"])],s.prototype,"readWait",null),s=Y=t([c("esri.rest.support.Stop")],s);var hi=s;export{ee as a,me as b,ce as c,ye as d,be as e,te as f,ve as g,se as h,M as i,V as j,Se as k,ge as l,Ne as m,Ae as n,ae as o,x as p,ot as q,Le as r,rt as s,Ot as t,qt as u,nr as v,oe as w,Zr as x,hi as y};
