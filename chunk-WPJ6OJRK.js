import{a as l}from"./chunk-EZIYNRHJ.js";import{a as r}from"./chunk-MXSUS5HK.js";import{a as n}from"./chunk-TCCAOREC.js";import{v as o}from"./chunk-SO6OJFOM.js";import{o as s}from"./chunk-Z5NXR7SL.js";var a=class h{constructor(t,i){this.key=new l(0,0,0,0),this.bounds=n(),this.objectIds=new Set,this.key.set(i);let e=t.getLODInfoAt(this.key);this.tileInfoView=t,this.tileInfoView.getTileBounds(this.bounds,this.key,!0),this.resolution=e.resolution,this.level=e.level,this.scale=e.scale,this.minScale=t.zoomToScale(e.level-1),this.maxScale=t.zoomToScale(e.level+1)}get lod(){return this.tileInfoView.getLODInfoAt(this.key)}get id(){return this.key.id}get extent(){return o.fromBounds(this.bounds,this.tileInfoView.tileInfo.spatialReference)}get transform(){return{originPosition:"upperLeft",scale:[this.resolution,this.resolution],translate:[this.bounds[0],this.bounds[3]]}}createArcadeEvaluationOptions(t){return{$view:{scale:this.scale,timeZone:t}}}createChildTiles(){let t=this.key.getChildKeys(),i=s.acquire();for(let e=0;e<t.length;e++)i[e]=new h(this.tileInfoView,t[e]);return i}getQuantizationParameters(){return r.fromJSON({mode:"view",originPosition:"upperLeft",tolerance:this.resolution,extent:{xmin:this.bounds[0],ymin:this.bounds[1],xmax:this.bounds[2],ymax:this.bounds[3],spatialReference:this.tileInfoView.tileInfo.spatialReference}})}};export{a};
