import{a as P,b as v,c as F}from"./chunk-2UGJ72JG.js";import{b as T,e as D,g as R,k as U,l as $,m as p,n as S,o as z,p as m,q as f,r as w,t as C,z as E}from"./chunk-ESBNO4XM.js";import{i as h,k as I,m as k,n as g}from"./chunk-2SHNUN5D.js";import{a as d}from"./chunk-IFCRPPYQ.js";import{a as x,b as M}from"./chunk-6KRFVLII.js";import{h as L}from"./chunk-3JLZ7SFH.js";import{b as u}from"./chunk-AQ74ANSJ.js";import{b as c}from"./chunk-RP7XSKHE.js";import{s as i}from"./chunk-BRWS572J.js";var ro=m.fromSimpleMarkerSymbol(P),no=p.fromSimpleLineSymbol(v),lo=f.fromSimpleFillSymbol(F),to=new S({symbolLayers:new c([new D({material:{color:x},edges:new T({size:u(1),color:new d(M)})})])}),O=new p({symbolLayers:new c([new R({material:{color:new d([0,0,0])},size:u(1)})])}),W=new f({symbolLayers:new c([new D({outline:{color:new d([0,0,0]),size:u(1)}})])});var s={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function j(o,r=s){if(!o)return{symbol:null};let{retainId:t=s.retainId,ignoreDrivers:n=s.ignoreDrivers,hasLabelingContext:l=s.hasLabelingContext,retainCIM:a=s.retainCIM,cimFallbackEnabled:y=s.cimFallbackEnabled}=r,e=null;if(C(o)||o instanceof w)e=o.clone();else if(o.type==="cim"){let b=o.data?.symbol?.type;switch(b){case"CIMPointSymbol":e=a?o.clone():m.fromCIMSymbol(o);break;case"CIMLineSymbol":y&&(e=O.clone(),r?.logWarning?.("Unsupported CIM line symbology converted to fallback 3D line symbology"));break;case"CIMPolygonSymbol":y&&(e=W.clone(),r?.logWarning?.("Unsupported CIM polygon symbology converted to fallback 3D polygon symbology"))}if(!e)return{error:new i("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${b||"unknown"}' is unsupported in 3D`,{symbol:o})}}else if(o instanceof h)e=p.fromSimpleLineSymbol(o);else if(o instanceof k)e=m.fromSimpleMarkerSymbol(o);else if(o instanceof z)e=m.fromPictureMarkerSymbol(o);else if(o instanceof I)e=r.geometryType&&r.geometryType==="mesh"?S.fromSimpleFillSymbol(o):f.fromSimpleFillSymbol(o);else{if(!(o instanceof g))return{error:new i("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${o.type||o.declaredClass}' is unsupported in 3D`,{symbol:o})};e=l?$.fromTextSymbol(o):m.fromTextSymbol(o)}return t&&e&&e.type!=="cim"&&(e.id=o.id),n&&C(e)&&e.symbolLayers.forEach(b=>b.ignoreDrivers=!0),{symbol:e}}function vo(o,r,t,n){let l=J(o,{},{context:n,isLabelSymbol:!1});l!=null&&(r[t]=l)}function Fo(o,r,t,n){let l=J(o,{},{context:n,isLabelSymbol:!0});l!=null&&(r[t]=l)}function V(o){return o instanceof U||o instanceof w}function J(o,r,t){if(o==null)return null;let{context:n,isLabelSymbol:l}=t,a=n?.origin,y=n?.messages;if(a==="web-scene"&&!V(o)){let e=j(o,{retainCIM:!0,hasLabelingContext:l});return e.symbol!=null?e.symbol.write(r,n):(y?.push(new i("symbol:unsupported",`Symbols of type '${o.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:o,context:n,error:e.error})),null)}return(a==="web-map"||a==="portal-item"&&!L(n?.layer))&&V(o)?(y?.push(new i("symbol:unsupported",`Symbols of type '${o.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:o,context:n})),null):o.write(r,n)}function To(o,r){return E(o,null,r)}export{vo as a,Fo as b,To as c};
